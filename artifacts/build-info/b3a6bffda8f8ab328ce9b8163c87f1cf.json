{
	"id": "b3a6bffda8f8ab328ce9b8163c87f1cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"task2/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MyFirstERC20 {\n\n    mapping(address=>uint) private _balance;\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n    string name;\n\n    event Transfer(address from, address to, uint amount);\n    event Approval(address from, address to, uint amount);\n\n    constructor(string memory _name) {\n        name = _name;\n    }\n\n    function balanceOf(address addr) public view returns(uint) {\n        return _balance[addr];\n    }\n\n    function approval(address spender, uint256 amount) external {\n        require(spender > address(0), \"Address cannot be 0\");\n        require(amount > 0, \"Transfer credit cannot be 0\");\n        address owner = msg.sender;\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n\n    }\n\n    function transfer(address to, uint amount) external {\n        require(to != address(0), \"Address cannot be 0\");\n        require(amount > 0, \"Transfer credit cannot be 0\");\n        require(_balance[msg.sender] >= amount, \"Insufficient balance\");\n        _balance[msg.sender] -= amount;\n        _balance[to] += amount;\n        emit Transfer(msg.sender, to, amount);\n    }\n\n    function _mint(address to, uint amount) external {\n        require(to != address(0), \"Address cannot be 0\");\n        require(amount > 0, \"Transfer credit cannot be 0\");\n        _balance[to] += amount;\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"task2/ERC20.sol": {
				"MyFirstERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task2/ERC20.sol\":112:1492  contract MyFirstERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"task2/ERC20.sol\":412:474  constructor(string memory _name) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"task2/ERC20.sol\":462:467  _name */\n  dup1\n    /* \"task2/ERC20.sol\":455:459  name */\n  0x02\n    /* \"task2/ERC20.sol\":455:467  name = _name */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"task2/ERC20.sol\":412:474  constructor(string memory _name) {... */\n  pop\n    /* \"task2/ERC20.sol\":112:1492  contract MyFirstERC20 {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:82   */\ntag_9:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_11:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_12:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_13:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_14:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_15:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_16:\n    /* \"#utility.yul\":957:984   */\n  tag_50\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_14\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_52\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1030:1118   */\ntag_51:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_17:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_54\n  tag_9\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_55\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_16\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_18:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_58\n  tag_15\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1434:1490   */\ntag_57:\n    /* \"#utility.yul\":1508:1537   */\n  tag_59\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_14\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_19:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_20:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_62\n    /* \"#utility.yul\":1885:1934   */\n  tag_63\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1869:1935   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_65\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2010:2122   */\ntag_64:\n    /* \"#utility.yul\":2131:2183   */\n  tag_66\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_19\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_21:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_69\n  tag_12\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2292:2414   */\ntag_68:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_70\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3094   */\ntag_3:\n    /* \"#utility.yul\":2650:2656   */\n  0x00\n    /* \"#utility.yul\":2699:2701   */\n  0x20\n    /* \"#utility.yul\":2687:2696   */\n  dup3\n    /* \"#utility.yul\":2678:2685   */\n  dup5\n    /* \"#utility.yul\":2674:2697   */\n  sub\n    /* \"#utility.yul\":2670:2702   */\n  slt\n    /* \"#utility.yul\":2667:2786   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2705:2784   */\n  tag_73\n  tag_10\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2667:2786   */\ntag_72:\n    /* \"#utility.yul\":2846:2847   */\n  0x00\n    /* \"#utility.yul\":2835:2844   */\n  dup3\n    /* \"#utility.yul\":2831:2848   */\n  add\n    /* \"#utility.yul\":2825:2849   */\n  mload\n    /* \"#utility.yul\":2876:2894   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2868:2874   */\n  dup2\n    /* \"#utility.yul\":2865:2895   */\n  gt\n    /* \"#utility.yul\":2862:2979   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2898:2977   */\n  tag_75\n  tag_11\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2862:2979   */\ntag_74:\n    /* \"#utility.yul\":3003:3077   */\n  tag_76\n    /* \"#utility.yul\":3069:3076   */\n  dup5\n    /* \"#utility.yul\":3060:3066   */\n  dup3\n    /* \"#utility.yul\":3049:3058   */\n  dup6\n    /* \"#utility.yul\":3045:3067   */\n  add\n    /* \"#utility.yul\":3003:3077   */\n  tag_21\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2993:3077   */\n  swap2\n  pop\n    /* \"#utility.yul\":2796:3087   */\n  pop\n    /* \"#utility.yul\":2570:3094   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3100:3199   */\ntag_22:\n    /* \"#utility.yul\":3152:3158   */\n  0x00\n    /* \"#utility.yul\":3186:3191   */\n  dup2\n    /* \"#utility.yul\":3180:3192   */\n  mload\n    /* \"#utility.yul\":3170:3192   */\n  swap1\n  pop\n    /* \"#utility.yul\":3100:3199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3205:3385   */\ntag_23:\n    /* \"#utility.yul\":3253:3330   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3250:3251   */\n  0x00\n    /* \"#utility.yul\":3243:3331   */\n  mstore\n    /* \"#utility.yul\":3350:3354   */\n  0x22\n    /* \"#utility.yul\":3347:3348   */\n  0x04\n    /* \"#utility.yul\":3340:3355   */\n  mstore\n    /* \"#utility.yul\":3374:3378   */\n  0x24\n    /* \"#utility.yul\":3371:3372   */\n  0x00\n    /* \"#utility.yul\":3364:3379   */\n  revert\n    /* \"#utility.yul\":3391:3711   */\ntag_24:\n    /* \"#utility.yul\":3435:3441   */\n  0x00\n    /* \"#utility.yul\":3472:3473   */\n  0x02\n    /* \"#utility.yul\":3466:3470   */\n  dup3\n    /* \"#utility.yul\":3462:3474   */\n  div\n    /* \"#utility.yul\":3452:3474   */\n  swap1\n  pop\n    /* \"#utility.yul\":3519:3520   */\n  0x01\n    /* \"#utility.yul\":3513:3517   */\n  dup3\n    /* \"#utility.yul\":3509:3521   */\n  and\n    /* \"#utility.yul\":3540:3558   */\n  dup1\n    /* \"#utility.yul\":3530:3611   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3596:3600   */\n  0x7f\n    /* \"#utility.yul\":3588:3594   */\n  dup3\n    /* \"#utility.yul\":3584:3601   */\n  and\n    /* \"#utility.yul\":3574:3601   */\n  swap2\n  pop\n    /* \"#utility.yul\":3530:3611   */\ntag_80:\n    /* \"#utility.yul\":3658:3660   */\n  0x20\n    /* \"#utility.yul\":3650:3656   */\n  dup3\n    /* \"#utility.yul\":3647:3661   */\n  lt\n    /* \"#utility.yul\":3627:3645   */\n  dup2\n    /* \"#utility.yul\":3624:3662   */\n  sub\n    /* \"#utility.yul\":3621:3705   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3677:3695   */\n  tag_82\n  tag_23\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3621:3705   */\ntag_81:\n    /* \"#utility.yul\":3442:3711   */\n  pop\n    /* \"#utility.yul\":3391:3711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3717:3858   */\ntag_25:\n    /* \"#utility.yul\":3766:3770   */\n  0x00\n    /* \"#utility.yul\":3789:3792   */\n  dup2\n    /* \"#utility.yul\":3781:3792   */\n  swap1\n  pop\n    /* \"#utility.yul\":3812:3815   */\n  dup2\n    /* \"#utility.yul\":3809:3810   */\n  0x00\n    /* \"#utility.yul\":3802:3816   */\n  mstore\n    /* \"#utility.yul\":3846:3850   */\n  0x20\n    /* \"#utility.yul\":3843:3844   */\n  0x00\n    /* \"#utility.yul\":3833:3851   */\n  keccak256\n    /* \"#utility.yul\":3825:3851   */\n  swap1\n  pop\n    /* \"#utility.yul\":3717:3858   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3864:3957   */\ntag_26:\n    /* \"#utility.yul\":3901:3907   */\n  0x00\n    /* \"#utility.yul\":3948:3950   */\n  0x20\n    /* \"#utility.yul\":3943:3945   */\n  0x1f\n    /* \"#utility.yul\":3936:3941   */\n  dup4\n    /* \"#utility.yul\":3932:3946   */\n  add\n    /* \"#utility.yul\":3928:3951   */\n  div\n    /* \"#utility.yul\":3918:3951   */\n  swap1\n  pop\n    /* \"#utility.yul\":3864:3957   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3963:4070   */\ntag_27:\n    /* \"#utility.yul\":4007:4015   */\n  0x00\n    /* \"#utility.yul\":4057:4062   */\n  dup3\n    /* \"#utility.yul\":4051:4055   */\n  dup3\n    /* \"#utility.yul\":4047:4063   */\n  shl\n    /* \"#utility.yul\":4026:4063   */\n  swap1\n  pop\n    /* \"#utility.yul\":3963:4070   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4076:4469   */\ntag_28:\n    /* \"#utility.yul\":4145:4151   */\n  0x00\n    /* \"#utility.yul\":4195:4196   */\n  0x08\n    /* \"#utility.yul\":4183:4193   */\n  dup4\n    /* \"#utility.yul\":4179:4197   */\n  mul\n    /* \"#utility.yul\":4218:4315   */\n  tag_87\n    /* \"#utility.yul\":4248:4314   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4237:4246   */\n  dup3\n    /* \"#utility.yul\":4218:4315   */\n  tag_27\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4336:4375   */\n  tag_88\n    /* \"#utility.yul\":4366:4374   */\n  dup7\n    /* \"#utility.yul\":4355:4364   */\n  dup4\n    /* \"#utility.yul\":4336:4375   */\n  tag_27\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4324:4375   */\n  swap6\n  pop\n    /* \"#utility.yul\":4408:4412   */\n  dup1\n    /* \"#utility.yul\":4404:4413   */\n  not\n    /* \"#utility.yul\":4397:4402   */\n  dup5\n    /* \"#utility.yul\":4393:4414   */\n  and\n    /* \"#utility.yul\":4384:4414   */\n  swap4\n  pop\n    /* \"#utility.yul\":4457:4461   */\n  dup1\n    /* \"#utility.yul\":4447:4455   */\n  dup7\n    /* \"#utility.yul\":4443:4462   */\n  and\n    /* \"#utility.yul\":4436:4441   */\n  dup5\n    /* \"#utility.yul\":4433:4463   */\n  or\n    /* \"#utility.yul\":4423:4463   */\n  swap3\n  pop\n    /* \"#utility.yul\":4152:4469   */\n  pop\n  pop\n    /* \"#utility.yul\":4076:4469   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4475:4552   */\ntag_29:\n    /* \"#utility.yul\":4512:4519   */\n  0x00\n    /* \"#utility.yul\":4541:4546   */\n  dup2\n    /* \"#utility.yul\":4530:4546   */\n  swap1\n  pop\n    /* \"#utility.yul\":4475:4552   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4558:4618   */\ntag_30:\n    /* \"#utility.yul\":4586:4589   */\n  0x00\n    /* \"#utility.yul\":4607:4612   */\n  dup2\n    /* \"#utility.yul\":4600:4612   */\n  swap1\n  pop\n    /* \"#utility.yul\":4558:4618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4624:4766   */\ntag_31:\n    /* \"#utility.yul\":4674:4683   */\n  0x00\n    /* \"#utility.yul\":4707:4760   */\n  tag_92\n    /* \"#utility.yul\":4725:4759   */\n  tag_93\n    /* \"#utility.yul\":4734:4758   */\n  tag_94\n    /* \"#utility.yul\":4752:4757   */\n  dup5\n    /* \"#utility.yul\":4734:4758   */\n  tag_29\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4725:4759   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4707:4760   */\n  tag_29\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4694:4760   */\n  swap1\n  pop\n    /* \"#utility.yul\":4624:4766   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4772:4847   */\ntag_32:\n    /* \"#utility.yul\":4815:4818   */\n  0x00\n    /* \"#utility.yul\":4836:4841   */\n  dup2\n    /* \"#utility.yul\":4829:4841   */\n  swap1\n  pop\n    /* \"#utility.yul\":4772:4847   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4853:5122   */\ntag_33:\n    /* \"#utility.yul\":4963:5002   */\n  tag_97\n    /* \"#utility.yul\":4994:5001   */\n  dup4\n    /* \"#utility.yul\":4963:5002   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5024:5115   */\n  tag_98\n    /* \"#utility.yul\":5073:5114   */\n  tag_99\n    /* \"#utility.yul\":5097:5113   */\n  dup3\n    /* \"#utility.yul\":5073:5114   */\n  tag_32\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5065:5071   */\n  dup5\n    /* \"#utility.yul\":5058:5062   */\n  dup5\n    /* \"#utility.yul\":5052:5063   */\n  sload\n    /* \"#utility.yul\":5024:5115   */\n  tag_28\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5018:5022   */\n  dup3\n    /* \"#utility.yul\":5011:5116   */\n  sstore\n    /* \"#utility.yul\":4929:5122   */\n  pop\n    /* \"#utility.yul\":4853:5122   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5128:5201   */\ntag_34:\n    /* \"#utility.yul\":5173:5176   */\n  0x00\n    /* \"#utility.yul\":5194:5195   */\n  0x00\n    /* \"#utility.yul\":5187:5195   */\n  swap1\n  pop\n    /* \"#utility.yul\":5128:5201   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5207:5396   */\ntag_35:\n    /* \"#utility.yul\":5284:5316   */\n  tag_102\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5325:5390   */\n  tag_103\n    /* \"#utility.yul\":5383:5389   */\n  dup2\n    /* \"#utility.yul\":5375:5381   */\n  dup5\n    /* \"#utility.yul\":5369:5373   */\n  dup5\n    /* \"#utility.yul\":5325:5390   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5260:5396   */\n  pop\n    /* \"#utility.yul\":5207:5396   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5402:5588   */\ntag_36:\n    /* \"#utility.yul\":5462:5582   */\ntag_105:\n    /* \"#utility.yul\":5479:5482   */\n  dup2\n    /* \"#utility.yul\":5472:5477   */\n  dup2\n    /* \"#utility.yul\":5469:5483   */\n  lt\n    /* \"#utility.yul\":5462:5582   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":5533:5572   */\n  tag_108\n    /* \"#utility.yul\":5570:5571   */\n  0x00\n    /* \"#utility.yul\":5563:5568   */\n  dup3\n    /* \"#utility.yul\":5533:5572   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5499:5504   */\n  dup2\n    /* \"#utility.yul\":5495:5508   */\n  add\n    /* \"#utility.yul\":5486:5508   */\n  swap1\n  pop\n    /* \"#utility.yul\":5462:5582   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":5402:5588   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5594:6137   */\ntag_37:\n    /* \"#utility.yul\":5695:5697   */\n  0x1f\n    /* \"#utility.yul\":5690:5693   */\n  dup3\n    /* \"#utility.yul\":5687:5698   */\n  gt\n    /* \"#utility.yul\":5684:6130   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5729:5767   */\n  tag_111\n    /* \"#utility.yul\":5761:5766   */\n  dup2\n    /* \"#utility.yul\":5729:5767   */\n  tag_25\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5813:5842   */\n  tag_112\n    /* \"#utility.yul\":5831:5841   */\n  dup5\n    /* \"#utility.yul\":5813:5842   */\n  tag_26\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5803:5811   */\n  dup2\n    /* \"#utility.yul\":5799:5843   */\n  add\n    /* \"#utility.yul\":5996:5998   */\n  0x20\n    /* \"#utility.yul\":5984:5994   */\n  dup6\n    /* \"#utility.yul\":5981:5999   */\n  lt\n    /* \"#utility.yul\":5978:6027   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":6017:6025   */\n  dup2\n    /* \"#utility.yul\":6002:6025   */\n  swap1\n  pop\n    /* \"#utility.yul\":5978:6027   */\ntag_113:\n    /* \"#utility.yul\":6040:6120   */\n  tag_114\n    /* \"#utility.yul\":6096:6118   */\n  tag_115\n    /* \"#utility.yul\":6114:6117   */\n  dup6\n    /* \"#utility.yul\":6096:6118   */\n  tag_26\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6086:6094   */\n  dup4\n    /* \"#utility.yul\":6082:6119   */\n  add\n    /* \"#utility.yul\":6069:6080   */\n  dup3\n    /* \"#utility.yul\":6040:6120   */\n  tag_36\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5699:6130   */\n  pop\n  pop\n    /* \"#utility.yul\":5684:6130   */\ntag_110:\n    /* \"#utility.yul\":5594:6137   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6143:6260   */\ntag_38:\n    /* \"#utility.yul\":6197:6205   */\n  0x00\n    /* \"#utility.yul\":6247:6252   */\n  dup3\n    /* \"#utility.yul\":6241:6245   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  shr\n    /* \"#utility.yul\":6216:6253   */\n  swap1\n  pop\n    /* \"#utility.yul\":6143:6260   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6266:6435   */\ntag_39:\n    /* \"#utility.yul\":6310:6316   */\n  0x00\n    /* \"#utility.yul\":6343:6394   */\n  tag_118\n    /* \"#utility.yul\":6391:6392   */\n  0x00\n    /* \"#utility.yul\":6387:6393   */\n  not\n    /* \"#utility.yul\":6379:6384   */\n  dup5\n    /* \"#utility.yul\":6376:6377   */\n  0x08\n    /* \"#utility.yul\":6372:6385   */\n  mul\n    /* \"#utility.yul\":6343:6394   */\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6339:6395   */\n  not\n    /* \"#utility.yul\":6424:6428   */\n  dup1\n    /* \"#utility.yul\":6418:6422   */\n  dup4\n    /* \"#utility.yul\":6414:6429   */\n  and\n    /* \"#utility.yul\":6404:6429   */\n  swap2\n  pop\n    /* \"#utility.yul\":6317:6435   */\n  pop\n    /* \"#utility.yul\":6266:6435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6440:6735   */\ntag_40:\n    /* \"#utility.yul\":6516:6520   */\n  0x00\n    /* \"#utility.yul\":6662:6691   */\n  tag_120\n    /* \"#utility.yul\":6687:6690   */\n  dup4\n    /* \"#utility.yul\":6681:6685   */\n  dup4\n    /* \"#utility.yul\":6662:6691   */\n  tag_39\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6654:6691   */\n  swap2\n  pop\n    /* \"#utility.yul\":6724:6727   */\n  dup3\n    /* \"#utility.yul\":6721:6722   */\n  0x02\n    /* \"#utility.yul\":6717:6728   */\n  mul\n    /* \"#utility.yul\":6711:6715   */\n  dup3\n    /* \"#utility.yul\":6708:6729   */\n  or\n    /* \"#utility.yul\":6700:6729   */\n  swap1\n  pop\n    /* \"#utility.yul\":6440:6735   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6740:8135   */\ntag_7:\n    /* \"#utility.yul\":6857:6894   */\n  tag_122\n    /* \"#utility.yul\":6890:6893   */\n  dup3\n    /* \"#utility.yul\":6857:6894   */\n  tag_22\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6959:6977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6951:6957   */\n  dup2\n    /* \"#utility.yul\":6948:6978   */\n  gt\n    /* \"#utility.yul\":6945:7001   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6981:6999   */\n  tag_124\n  tag_15\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6945:7001   */\ntag_123:\n    /* \"#utility.yul\":7025:7063   */\n  tag_125\n    /* \"#utility.yul\":7057:7061   */\n  dup3\n    /* \"#utility.yul\":7051:7062   */\n  sload\n    /* \"#utility.yul\":7025:7063   */\n  tag_24\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":7110:7177   */\n  tag_126\n    /* \"#utility.yul\":7170:7176   */\n  dup3\n    /* \"#utility.yul\":7162:7168   */\n  dup3\n    /* \"#utility.yul\":7156:7160   */\n  dup6\n    /* \"#utility.yul\":7110:7177   */\n  tag_37\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7204:7205   */\n  0x00\n    /* \"#utility.yul\":7228:7232   */\n  0x20\n    /* \"#utility.yul\":7215:7232   */\n  swap1\n  pop\n    /* \"#utility.yul\":7260:7262   */\n  0x1f\n    /* \"#utility.yul\":7252:7258   */\n  dup4\n    /* \"#utility.yul\":7249:7263   */\n  gt\n    /* \"#utility.yul\":7277:7278   */\n  0x01\n    /* \"#utility.yul\":7272:7890   */\n  dup2\n  eq\n  tag_128\n  jumpi\n    /* \"#utility.yul\":7934:7935   */\n  0x00\n    /* \"#utility.yul\":7951:7957   */\n  dup5\n    /* \"#utility.yul\":7948:8025   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":8000:8009   */\n  dup3\n    /* \"#utility.yul\":7995:7998   */\n  dup8\n    /* \"#utility.yul\":7991:8010   */\n  add\n    /* \"#utility.yul\":7985:8011   */\n  mload\n    /* \"#utility.yul\":7976:8011   */\n  swap1\n  pop\n    /* \"#utility.yul\":7948:8025   */\ntag_129:\n    /* \"#utility.yul\":8051:8118   */\n  tag_130\n    /* \"#utility.yul\":8111:8117   */\n  dup6\n    /* \"#utility.yul\":8104:8109   */\n  dup3\n    /* \"#utility.yul\":8051:8118   */\n  tag_40\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":8045:8049   */\n  dup7\n    /* \"#utility.yul\":8038:8119   */\n  sstore\n    /* \"#utility.yul\":7907:8129   */\n  pop\n    /* \"#utility.yul\":7242:8129   */\n  jump(tag_127)\n    /* \"#utility.yul\":7272:7890   */\ntag_128:\n    /* \"#utility.yul\":7324:7328   */\n  0x1f\n    /* \"#utility.yul\":7320:7329   */\n  not\n    /* \"#utility.yul\":7312:7318   */\n  dup5\n    /* \"#utility.yul\":7308:7330   */\n  and\n    /* \"#utility.yul\":7358:7395   */\n  tag_131\n    /* \"#utility.yul\":7390:7394   */\n  dup7\n    /* \"#utility.yul\":7358:7395   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7417:7418   */\n  0x00\n    /* \"#utility.yul\":7431:7639   */\ntag_132:\n    /* \"#utility.yul\":7445:7452   */\n  dup3\n    /* \"#utility.yul\":7442:7443   */\n  dup2\n    /* \"#utility.yul\":7439:7453   */\n  lt\n    /* \"#utility.yul\":7431:7639   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":7524:7533   */\n  dup5\n    /* \"#utility.yul\":7519:7522   */\n  dup10\n    /* \"#utility.yul\":7515:7534   */\n  add\n    /* \"#utility.yul\":7509:7535   */\n  mload\n    /* \"#utility.yul\":7501:7507   */\n  dup3\n    /* \"#utility.yul\":7494:7536   */\n  sstore\n    /* \"#utility.yul\":7575:7576   */\n  0x01\n    /* \"#utility.yul\":7567:7573   */\n  dup3\n    /* \"#utility.yul\":7563:7577   */\n  add\n    /* \"#utility.yul\":7553:7577   */\n  swap2\n  pop\n    /* \"#utility.yul\":7622:7624   */\n  0x20\n    /* \"#utility.yul\":7611:7620   */\n  dup6\n    /* \"#utility.yul\":7607:7625   */\n  add\n    /* \"#utility.yul\":7594:7625   */\n  swap5\n  pop\n    /* \"#utility.yul\":7468:7472   */\n  0x20\n    /* \"#utility.yul\":7465:7466   */\n  dup2\n    /* \"#utility.yul\":7461:7473   */\n  add\n    /* \"#utility.yul\":7456:7473   */\n  swap1\n  pop\n    /* \"#utility.yul\":7431:7639   */\n  jump(tag_132)\ntag_134:\n    /* \"#utility.yul\":7667:7673   */\n  dup7\n    /* \"#utility.yul\":7658:7665   */\n  dup4\n    /* \"#utility.yul\":7655:7674   */\n  lt\n    /* \"#utility.yul\":7652:7831   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7725:7734   */\n  dup5\n    /* \"#utility.yul\":7720:7723   */\n  dup10\n    /* \"#utility.yul\":7716:7735   */\n  add\n    /* \"#utility.yul\":7710:7736   */\n  mload\n    /* \"#utility.yul\":7768:7816   */\n  tag_136\n    /* \"#utility.yul\":7810:7814   */\n  0x1f\n    /* \"#utility.yul\":7802:7808   */\n  dup10\n    /* \"#utility.yul\":7798:7815   */\n  and\n    /* \"#utility.yul\":7787:7796   */\n  dup3\n    /* \"#utility.yul\":7768:7816   */\n  tag_39\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7760:7766   */\n  dup4\n    /* \"#utility.yul\":7753:7817   */\n  sstore\n    /* \"#utility.yul\":7675:7831   */\n  pop\n    /* \"#utility.yul\":7652:7831   */\ntag_135:\n    /* \"#utility.yul\":7877:7878   */\n  0x01\n    /* \"#utility.yul\":7873:7874   */\n  0x02\n    /* \"#utility.yul\":7865:7871   */\n  dup9\n    /* \"#utility.yul\":7861:7875   */\n  mul\n    /* \"#utility.yul\":7857:7879   */\n  add\n    /* \"#utility.yul\":7851:7855   */\n  dup9\n    /* \"#utility.yul\":7844:7880   */\n  sstore\n    /* \"#utility.yul\":7279:7890   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7242:8129   */\ntag_127:\n  pop\n    /* \"#utility.yul\":6832:8135   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6740:8135   */\n  pop\n  pop\n  jump\t// out\n    /* \"task2/ERC20.sol\":112:1492  contract MyFirstERC20 {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"task2/ERC20.sol\":112:1492  contract MyFirstERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e6ec247\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75247a58\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"task2/ERC20.sol\":1283:1489  function _mint(address to, uint amount) external {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"task2/ERC20.sol\":480:577  function balanceOf(address addr) public view returns(uint) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/ERC20.sol\":583:902  function approval(address spender, uint256 amount) external {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"task2/ERC20.sol\":908:1277  function transfer(address to, uint amount) external {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"task2/ERC20.sol\":1283:1489  function _mint(address to, uint amount) external {... */\n    tag_10:\n        /* \"task2/ERC20.sol\":1364:1365  0 */\n      0x00\n        /* \"task2/ERC20.sol\":1350:1366  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/ERC20.sol\":1350:1352  to */\n      dup3\n        /* \"task2/ERC20.sol\":1350:1366  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/ERC20.sol\":1342:1390  require(to != address(0), \"Address cannot be 0\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"task2/ERC20.sol\":1417:1418  0 */\n      0x00\n        /* \"task2/ERC20.sol\":1408:1414  amount */\n      dup2\n        /* \"task2/ERC20.sol\":1408:1418  amount > 0 */\n      gt\n        /* \"task2/ERC20.sol\":1400:1450  require(amount > 0, \"Transfer credit cannot be 0\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"task2/ERC20.sol\":1476:1482  amount */\n      dup1\n        /* \"task2/ERC20.sol\":1460:1468  _balance */\n      0x00\n        /* \"task2/ERC20.sol\":1460:1472  _balance[to] */\n      0x00\n        /* \"task2/ERC20.sol\":1469:1471  to */\n      dup5\n        /* \"task2/ERC20.sol\":1460:1472  _balance[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/ERC20.sol\":1460:1482  _balance[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/ERC20.sol\":1283:1489  function _mint(address to, uint amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"task2/ERC20.sol\":480:577  function balanceOf(address addr) public view returns(uint) {... */\n    tag_14:\n        /* \"task2/ERC20.sol\":533:537  uint */\n      0x00\n        /* \"task2/ERC20.sol\":556:564  _balance */\n      0x00\n        /* \"task2/ERC20.sol\":556:570  _balance[addr] */\n      0x00\n        /* \"task2/ERC20.sol\":565:569  addr */\n      dup4\n        /* \"task2/ERC20.sol\":556:570  _balance[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/ERC20.sol\":549:570  return _balance[addr] */\n      swap1\n      pop\n        /* \"task2/ERC20.sol\":480:577  function balanceOf(address addr) public view returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"task2/ERC20.sol\":583:902  function approval(address spender, uint256 amount) external {... */\n    tag_19:\n        /* \"task2/ERC20.sol\":679:680  0 */\n      0x00\n        /* \"task2/ERC20.sol\":661:681  spender > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/ERC20.sol\":661:668  spender */\n      dup3\n        /* \"task2/ERC20.sol\":661:681  spender > address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"task2/ERC20.sol\":653:705  require(spender > address(0), \"Address cannot be 0\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"task2/ERC20.sol\":732:733  0 */\n      0x00\n        /* \"task2/ERC20.sol\":723:729  amount */\n      dup2\n        /* \"task2/ERC20.sol\":723:733  amount > 0 */\n      gt\n        /* \"task2/ERC20.sol\":715:765  require(amount > 0, \"Transfer credit cannot be 0\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_29\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"task2/ERC20.sol\":775:788  address owner */\n      0x00\n        /* \"task2/ERC20.sol\":791:801  msg.sender */\n      caller\n        /* \"task2/ERC20.sol\":775:801  address owner = msg.sender */\n      swap1\n      pop\n        /* \"task2/ERC20.sol\":841:847  amount */\n      dup2\n        /* \"task2/ERC20.sol\":811:822  _allowances */\n      0x01\n        /* \"task2/ERC20.sol\":811:829  _allowances[owner] */\n      0x00\n        /* \"task2/ERC20.sol\":823:828  owner */\n      dup4\n        /* \"task2/ERC20.sol\":811:829  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task2/ERC20.sol\":811:838  _allowances[owner][spender] */\n      0x00\n        /* \"task2/ERC20.sol\":830:837  spender */\n      dup6\n        /* \"task2/ERC20.sol\":811:838  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task2/ERC20.sol\":811:847  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/ERC20.sol\":862:894  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"task2/ERC20.sol\":871:876  owner */\n      dup2\n        /* \"task2/ERC20.sol\":878:885  spender */\n      dup5\n        /* \"task2/ERC20.sol\":887:893  amount */\n      dup5\n        /* \"task2/ERC20.sol\":862:894  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_38\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"task2/ERC20.sol\":643:902  {... */\n      pop\n        /* \"task2/ERC20.sol\":583:902  function approval(address spender, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"task2/ERC20.sol\":908:1277  function transfer(address to, uint amount) external {... */\n    tag_22:\n        /* \"task2/ERC20.sol\":992:993  0 */\n      0x00\n        /* \"task2/ERC20.sol\":978:994  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/ERC20.sol\":978:980  to */\n      dup3\n        /* \"task2/ERC20.sol\":978:994  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/ERC20.sol\":970:1018  require(to != address(0), \"Address cannot be 0\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_26\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"task2/ERC20.sol\":1045:1046  0 */\n      0x00\n        /* \"task2/ERC20.sol\":1036:1042  amount */\n      dup2\n        /* \"task2/ERC20.sol\":1036:1046  amount > 0 */\n      gt\n        /* \"task2/ERC20.sol\":1028:1078  require(amount > 0, \"Transfer credit cannot be 0\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"task2/ERC20.sol\":1120:1126  amount */\n      dup1\n        /* \"task2/ERC20.sol\":1096:1104  _balance */\n      0x00\n        /* \"task2/ERC20.sol\":1096:1116  _balance[msg.sender] */\n      0x00\n        /* \"task2/ERC20.sol\":1105:1115  msg.sender */\n      caller\n        /* \"task2/ERC20.sol\":1096:1116  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/ERC20.sol\":1096:1126  _balance[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"task2/ERC20.sol\":1088:1151  require(_balance[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"task2/ERC20.sol\":1185:1191  amount */\n      dup1\n        /* \"task2/ERC20.sol\":1161:1169  _balance */\n      0x00\n        /* \"task2/ERC20.sol\":1161:1181  _balance[msg.sender] */\n      0x00\n        /* \"task2/ERC20.sol\":1170:1180  msg.sender */\n      caller\n        /* \"task2/ERC20.sol\":1161:1181  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/ERC20.sol\":1161:1191  _balance[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/ERC20.sol\":1217:1223  amount */\n      dup1\n        /* \"task2/ERC20.sol\":1201:1209  _balance */\n      0x00\n        /* \"task2/ERC20.sol\":1201:1213  _balance[to] */\n      0x00\n        /* \"task2/ERC20.sol\":1210:1212  to */\n      dup5\n        /* \"task2/ERC20.sol\":1201:1213  _balance[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/ERC20.sol\":1201:1223  _balance[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_50\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/ERC20.sol\":1238:1270  Transfer(msg.sender, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"task2/ERC20.sol\":1247:1257  msg.sender */\n      caller\n        /* \"task2/ERC20.sol\":1259:1261  to */\n      dup4\n        /* \"task2/ERC20.sol\":1263:1269  amount */\n      dup4\n        /* \"task2/ERC20.sol\":1238:1270  Transfer(msg.sender, to, amount) */\n      mload(0x40)\n      tag_51\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"task2/ERC20.sol\":908:1277  function transfer(address to, uint amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_53:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_55:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_56:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_78\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_55\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_57:\n        /* \"#utility.yul\":641:665   */\n      tag_80\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_56\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_81:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_58:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_83\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_57\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_59:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_60:\n        /* \"#utility.yul\":997:1021   */\n      tag_86\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_59\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_87:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_61:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_89\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_60\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_9:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_92\n      tag_53\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1290:1409   */\n    tag_91:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_93\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_58\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_94\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_61\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2006   */\n    tag_13:\n        /* \"#utility.yul\":1736:1742   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1872   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":1791:1870   */\n      tag_97\n      tag_53\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1753:1872   */\n    tag_96:\n        /* \"#utility.yul\":1911:1912   */\n      0x00\n        /* \"#utility.yul\":1936:1989   */\n      tag_98\n        /* \"#utility.yul\":1981:1988   */\n      dup5\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup6\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_58\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1882:1999   */\n      pop\n        /* \"#utility.yul\":1677:2006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2130   */\n    tag_62:\n        /* \"#utility.yul\":2099:2123   */\n      tag_100\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_59\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2124   */\n      mstore\n        /* \"#utility.yul\":2012:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2358   */\n    tag_16:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x20\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_102\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2280:2351   */\n      tag_62\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2136:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2533   */\n    tag_63:\n        /* \"#utility.yul\":2448:2459   */\n      0x00\n        /* \"#utility.yul\":2482:2488   */\n      dup3\n        /* \"#utility.yul\":2477:2480   */\n      dup3\n        /* \"#utility.yul\":2470:2489   */\n      mstore\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2517:2520   */\n      dup3\n        /* \"#utility.yul\":2513:2527   */\n      add\n        /* \"#utility.yul\":2498:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2708   */\n    tag_64:\n        /* \"#utility.yul\":2679:2700   */\n      0x416464726573732063616e6e6f74206265203000000000000000000000000000\n        /* \"#utility.yul\":2675:2676   */\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      dup3\n        /* \"#utility.yul\":2663:2677   */\n      add\n        /* \"#utility.yul\":2656:2701   */\n      mstore\n        /* \"#utility.yul\":2539:2708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2714:3080   */\n    tag_65:\n        /* \"#utility.yul\":2856:2859   */\n      0x00\n        /* \"#utility.yul\":2877:2944   */\n      tag_106\n        /* \"#utility.yul\":2941:2943   */\n      0x13\n        /* \"#utility.yul\":2936:2939   */\n      dup4\n        /* \"#utility.yul\":2877:2944   */\n      tag_63\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2870:2944   */\n      swap2\n      pop\n        /* \"#utility.yul\":2953:3046   */\n      tag_107\n        /* \"#utility.yul\":3042:3045   */\n      dup3\n        /* \"#utility.yul\":2953:3046   */\n      tag_64\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3071:3073   */\n      0x20\n        /* \"#utility.yul\":3066:3069   */\n      dup3\n        /* \"#utility.yul\":3062:3074   */\n      add\n        /* \"#utility.yul\":3055:3074   */\n      swap1\n      pop\n        /* \"#utility.yul\":2714:3080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3086:3505   */\n    tag_26:\n        /* \"#utility.yul\":3252:3256   */\n      0x00\n        /* \"#utility.yul\":3290:3292   */\n      0x20\n        /* \"#utility.yul\":3279:3288   */\n      dup3\n        /* \"#utility.yul\":3275:3293   */\n      add\n        /* \"#utility.yul\":3267:3293   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3348   */\n      dup2\n        /* \"#utility.yul\":3333:3337   */\n      dup2\n        /* \"#utility.yul\":3329:3349   */\n      sub\n        /* \"#utility.yul\":3325:3326   */\n      0x00\n        /* \"#utility.yul\":3314:3323   */\n      dup4\n        /* \"#utility.yul\":3310:3327   */\n      add\n        /* \"#utility.yul\":3303:3350   */\n      mstore\n        /* \"#utility.yul\":3367:3498   */\n      tag_109\n        /* \"#utility.yul\":3493:3497   */\n      dup2\n        /* \"#utility.yul\":3367:3498   */\n      tag_65\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3359:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3086:3505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:3688   */\n    tag_66:\n        /* \"#utility.yul\":3651:3680   */\n      0x5472616e73666572206372656469742063616e6e6f7420626520300000000000\n        /* \"#utility.yul\":3647:3648   */\n      0x00\n        /* \"#utility.yul\":3639:3645   */\n      dup3\n        /* \"#utility.yul\":3635:3649   */\n      add\n        /* \"#utility.yul\":3628:3681   */\n      mstore\n        /* \"#utility.yul\":3511:3688   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3694:4060   */\n    tag_67:\n        /* \"#utility.yul\":3836:3839   */\n      0x00\n        /* \"#utility.yul\":3857:3924   */\n      tag_112\n        /* \"#utility.yul\":3921:3923   */\n      0x1b\n        /* \"#utility.yul\":3916:3919   */\n      dup4\n        /* \"#utility.yul\":3857:3924   */\n      tag_63\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3850:3924   */\n      swap2\n      pop\n        /* \"#utility.yul\":3933:4026   */\n      tag_113\n        /* \"#utility.yul\":4022:4025   */\n      dup3\n        /* \"#utility.yul\":3933:4026   */\n      tag_66\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4051:4053   */\n      0x20\n        /* \"#utility.yul\":4046:4049   */\n      dup3\n        /* \"#utility.yul\":4042:4054   */\n      add\n        /* \"#utility.yul\":4035:4054   */\n      swap1\n      pop\n        /* \"#utility.yul\":3694:4060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4066:4485   */\n    tag_29:\n        /* \"#utility.yul\":4232:4236   */\n      0x00\n        /* \"#utility.yul\":4270:4272   */\n      0x20\n        /* \"#utility.yul\":4259:4268   */\n      dup3\n        /* \"#utility.yul\":4255:4273   */\n      add\n        /* \"#utility.yul\":4247:4273   */\n      swap1\n      pop\n        /* \"#utility.yul\":4319:4328   */\n      dup2\n        /* \"#utility.yul\":4313:4317   */\n      dup2\n        /* \"#utility.yul\":4309:4329   */\n      sub\n        /* \"#utility.yul\":4305:4306   */\n      0x00\n        /* \"#utility.yul\":4294:4303   */\n      dup4\n        /* \"#utility.yul\":4290:4307   */\n      add\n        /* \"#utility.yul\":4283:4330   */\n      mstore\n        /* \"#utility.yul\":4347:4478   */\n      tag_115\n        /* \"#utility.yul\":4473:4477   */\n      dup2\n        /* \"#utility.yul\":4347:4478   */\n      tag_67\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4339:4478   */\n      swap1\n      pop\n        /* \"#utility.yul\":4066:4485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4491:4671   */\n    tag_68:\n        /* \"#utility.yul\":4539:4616   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4536:4537   */\n      0x00\n        /* \"#utility.yul\":4529:4617   */\n      mstore\n        /* \"#utility.yul\":4636:4640   */\n      0x11\n        /* \"#utility.yul\":4633:4634   */\n      0x04\n        /* \"#utility.yul\":4626:4641   */\n      mstore\n        /* \"#utility.yul\":4660:4664   */\n      0x24\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4650:4665   */\n      revert\n        /* \"#utility.yul\":4677:4868   */\n    tag_31:\n        /* \"#utility.yul\":4717:4720   */\n      0x00\n        /* \"#utility.yul\":4736:4756   */\n      tag_118\n        /* \"#utility.yul\":4754:4755   */\n      dup3\n        /* \"#utility.yul\":4736:4756   */\n      tag_59\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4731:4756   */\n      swap2\n      pop\n        /* \"#utility.yul\":4770:4790   */\n      tag_119\n        /* \"#utility.yul\":4788:4789   */\n      dup4\n        /* \"#utility.yul\":4770:4790   */\n      tag_59\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4765:4790   */\n      swap3\n      pop\n        /* \"#utility.yul\":4813:4814   */\n      dup3\n        /* \"#utility.yul\":4810:4811   */\n      dup3\n        /* \"#utility.yul\":4806:4815   */\n      add\n        /* \"#utility.yul\":4799:4815   */\n      swap1\n      pop\n        /* \"#utility.yul\":4834:4837   */\n      dup1\n        /* \"#utility.yul\":4831:4832   */\n      dup3\n        /* \"#utility.yul\":4828:4838   */\n      gt\n        /* \"#utility.yul\":4825:4861   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4841:4859   */\n      tag_121\n      tag_68\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4825:4861   */\n    tag_120:\n        /* \"#utility.yul\":4677:4868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:4992   */\n    tag_69:\n        /* \"#utility.yul\":4961:4985   */\n      tag_123\n        /* \"#utility.yul\":4979:4984   */\n      dup2\n        /* \"#utility.yul\":4961:4985   */\n      tag_56\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4956:4959   */\n      dup3\n        /* \"#utility.yul\":4949:4986   */\n      mstore\n        /* \"#utility.yul\":4874:4992   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4998:5440   */\n    tag_39:\n        /* \"#utility.yul\":5147:5151   */\n      0x00\n        /* \"#utility.yul\":5185:5187   */\n      0x60\n        /* \"#utility.yul\":5174:5183   */\n      dup3\n        /* \"#utility.yul\":5170:5188   */\n      add\n        /* \"#utility.yul\":5162:5188   */\n      swap1\n      pop\n        /* \"#utility.yul\":5198:5269   */\n      tag_125\n        /* \"#utility.yul\":5266:5267   */\n      0x00\n        /* \"#utility.yul\":5255:5264   */\n      dup4\n        /* \"#utility.yul\":5251:5268   */\n      add\n        /* \"#utility.yul\":5242:5248   */\n      dup7\n        /* \"#utility.yul\":5198:5269   */\n      tag_69\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5279:5351   */\n      tag_126\n        /* \"#utility.yul\":5347:5349   */\n      0x20\n        /* \"#utility.yul\":5336:5345   */\n      dup4\n        /* \"#utility.yul\":5332:5350   */\n      add\n        /* \"#utility.yul\":5323:5329   */\n      dup6\n        /* \"#utility.yul\":5279:5351   */\n      tag_69\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5361:5433   */\n      tag_127\n        /* \"#utility.yul\":5429:5431   */\n      0x40\n        /* \"#utility.yul\":5418:5427   */\n      dup4\n        /* \"#utility.yul\":5414:5432   */\n      add\n        /* \"#utility.yul\":5405:5411   */\n      dup5\n        /* \"#utility.yul\":5361:5433   */\n      tag_62\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4998:5440   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5446:5616   */\n    tag_70:\n        /* \"#utility.yul\":5586:5608   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":5582:5583   */\n      0x00\n        /* \"#utility.yul\":5574:5580   */\n      dup3\n        /* \"#utility.yul\":5570:5584   */\n      add\n        /* \"#utility.yul\":5563:5609   */\n      mstore\n        /* \"#utility.yul\":5446:5616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5622:5988   */\n    tag_71:\n        /* \"#utility.yul\":5764:5767   */\n      0x00\n        /* \"#utility.yul\":5785:5852   */\n      tag_130\n        /* \"#utility.yul\":5849:5851   */\n      0x14\n        /* \"#utility.yul\":5844:5847   */\n      dup4\n        /* \"#utility.yul\":5785:5852   */\n      tag_63\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5778:5852   */\n      swap2\n      pop\n        /* \"#utility.yul\":5861:5954   */\n      tag_131\n        /* \"#utility.yul\":5950:5953   */\n      dup3\n        /* \"#utility.yul\":5861:5954   */\n      tag_70\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5979:5981   */\n      0x20\n        /* \"#utility.yul\":5974:5977   */\n      dup3\n        /* \"#utility.yul\":5970:5982   */\n      add\n        /* \"#utility.yul\":5963:5982   */\n      swap1\n      pop\n        /* \"#utility.yul\":5622:5988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6413   */\n    tag_47:\n        /* \"#utility.yul\":6160:6164   */\n      0x00\n        /* \"#utility.yul\":6198:6200   */\n      0x20\n        /* \"#utility.yul\":6187:6196   */\n      dup3\n        /* \"#utility.yul\":6183:6201   */\n      add\n        /* \"#utility.yul\":6175:6201   */\n      swap1\n      pop\n        /* \"#utility.yul\":6247:6256   */\n      dup2\n        /* \"#utility.yul\":6241:6245   */\n      dup2\n        /* \"#utility.yul\":6237:6257   */\n      sub\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6222:6231   */\n      dup4\n        /* \"#utility.yul\":6218:6235   */\n      add\n        /* \"#utility.yul\":6211:6258   */\n      mstore\n        /* \"#utility.yul\":6275:6406   */\n      tag_133\n        /* \"#utility.yul\":6401:6405   */\n      dup2\n        /* \"#utility.yul\":6275:6406   */\n      tag_71\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6267:6406   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6419:6613   */\n    tag_49:\n        /* \"#utility.yul\":6459:6463   */\n      0x00\n        /* \"#utility.yul\":6479:6499   */\n      tag_135\n        /* \"#utility.yul\":6497:6498   */\n      dup3\n        /* \"#utility.yul\":6479:6499   */\n      tag_59\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6474:6499   */\n      swap2\n      pop\n        /* \"#utility.yul\":6513:6533   */\n      tag_136\n        /* \"#utility.yul\":6531:6532   */\n      dup4\n        /* \"#utility.yul\":6513:6533   */\n      tag_59\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6508:6533   */\n      swap3\n      pop\n        /* \"#utility.yul\":6557:6558   */\n      dup3\n        /* \"#utility.yul\":6554:6555   */\n      dup3\n        /* \"#utility.yul\":6550:6559   */\n      sub\n        /* \"#utility.yul\":6542:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6582   */\n      dup2\n        /* \"#utility.yul\":6575:6579   */\n      dup2\n        /* \"#utility.yul\":6572:6583   */\n      gt\n        /* \"#utility.yul\":6569:6606   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6586:6604   */\n      tag_138\n      tag_68\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6569:6606   */\n    tag_137:\n        /* \"#utility.yul\":6419:6613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205482113e5a37bd6e1e8fff8f59b46747d348f188f7bf011cd4b6e4a6a795c42364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 71,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 80,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8138:6",
										"nodeType": "YulBlock",
										"src": "0:8138:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2657:437:6",
													"nodeType": "YulBlock",
													"src": "2657:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2703:83:6",
																"nodeType": "YulBlock",
																"src": "2703:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2705:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2705:77:6"
																			},
																			"nativeSrc": "2705:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:79:6"
																		},
																		"nativeSrc": "2705:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2678:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2678:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2687:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2687:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2674:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:6"
																		},
																		"nativeSrc": "2674:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2674:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2699:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2699:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2670:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2670:3:6"
																},
																"nativeSrc": "2670:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2670:32:6"
															},
															"nativeSrc": "2667:119:6",
															"nodeType": "YulIf",
															"src": "2667:119:6"
														},
														{
															"nativeSrc": "2796:291:6",
															"nodeType": "YulBlock",
															"src": "2796:291:6",
															"statements": [
																{
																	"nativeSrc": "2811:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2835:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2835:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2846:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2846:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2831:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:6"
																				},
																				"nativeSrc": "2831:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2825:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2825:5:6"
																		},
																		"nativeSrc": "2825:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2815:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2896:83:6",
																		"nodeType": "YulBlock",
																		"src": "2896:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2898:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "2898:77:6"
																					},
																					"nativeSrc": "2898:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2898:79:6"
																				},
																				"nativeSrc": "2898:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2898:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2868:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2868:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2876:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2876:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2865:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2865:2:6"
																		},
																		"nativeSrc": "2865:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:30:6"
																	},
																	"nativeSrc": "2862:117:6",
																	"nodeType": "YulIf",
																	"src": "2862:117:6"
																},
																{
																	"nativeSrc": "2993:84:6",
																	"nodeType": "YulAssignment",
																	"src": "2993:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3049:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3049:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3060:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3060:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3045:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3045:3:6"
																				},
																				"nativeSrc": "3045:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3045:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3069:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3069:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3003:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3003:41:6"
																		},
																		"nativeSrc": "3003:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2993:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2993:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:524:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2627:9:6",
														"nodeType": "YulTypedName",
														"src": "2627:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2638:7:6",
														"nodeType": "YulTypedName",
														"src": "2638:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2650:6:6",
														"nodeType": "YulTypedName",
														"src": "2650:6:6",
														"type": ""
													}
												],
												"src": "2570:524:6"
											},
											{
												"body": {
													"nativeSrc": "3159:40:6",
													"nodeType": "YulBlock",
													"src": "3159:40:6",
													"statements": [
														{
															"nativeSrc": "3170:22:6",
															"nodeType": "YulAssignment",
															"src": "3170:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3186:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3186:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3180:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3180:5:6"
																},
																"nativeSrc": "3180:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3180:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3170:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3100:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3142:5:6",
														"nodeType": "YulTypedName",
														"src": "3142:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3152:6:6",
														"nodeType": "YulTypedName",
														"src": "3152:6:6",
														"type": ""
													}
												],
												"src": "3100:99:6"
											},
											{
												"body": {
													"nativeSrc": "3233:152:6",
													"nodeType": "YulBlock",
													"src": "3233:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3250:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3250:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3253:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3253:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3243:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:6"
																},
																"nativeSrc": "3243:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3243:88:6"
															},
															"nativeSrc": "3243:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3243:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3347:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3347:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3350:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3350:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:6"
																},
																"nativeSrc": "3340:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3340:15:6"
															},
															"nativeSrc": "3340:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3340:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3371:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3371:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3374:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3364:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:6"
																},
																"nativeSrc": "3364:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3364:15:6"
															},
															"nativeSrc": "3364:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3364:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3205:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3205:180:6"
											},
											{
												"body": {
													"nativeSrc": "3442:269:6",
													"nodeType": "YulBlock",
													"src": "3442:269:6",
													"statements": [
														{
															"nativeSrc": "3452:22:6",
															"nodeType": "YulAssignment",
															"src": "3452:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3466:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3466:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3472:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3472:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3462:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3462:3:6"
																},
																"nativeSrc": "3462:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3462:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3452:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:6"
																}
															]
														},
														{
															"nativeSrc": "3483:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3483:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3513:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3513:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3519:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3509:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:6"
																},
																"nativeSrc": "3509:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3487:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3487:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3560:51:6",
																"nodeType": "YulBlock",
																"src": "3560:51:6",
																"statements": [
																	{
																		"nativeSrc": "3574:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3574:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3588:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3588:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3596:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3596:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3584:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3584:3:6"
																			},
																			"nativeSrc": "3584:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3584:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3574:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3540:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3540:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3533:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:6"
																},
																"nativeSrc": "3533:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3533:26:6"
															},
															"nativeSrc": "3530:81:6",
															"nodeType": "YulIf",
															"src": "3530:81:6"
														},
														{
															"body": {
																"nativeSrc": "3663:42:6",
																"nodeType": "YulBlock",
																"src": "3663:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3677:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3677:16:6"
																			},
																			"nativeSrc": "3677:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3677:18:6"
																		},
																		"nativeSrc": "3677:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3677:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3627:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3627:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3650:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3650:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3658:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3658:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3647:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3647:2:6"
																		},
																		"nativeSrc": "3647:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3624:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3624:2:6"
																},
																"nativeSrc": "3624:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3624:38:6"
															},
															"nativeSrc": "3621:84:6",
															"nodeType": "YulIf",
															"src": "3621:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3391:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3426:4:6",
														"nodeType": "YulTypedName",
														"src": "3426:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3435:6:6",
														"nodeType": "YulTypedName",
														"src": "3435:6:6",
														"type": ""
													}
												],
												"src": "3391:320:6"
											},
											{
												"body": {
													"nativeSrc": "3771:87:6",
													"nodeType": "YulBlock",
													"src": "3771:87:6",
													"statements": [
														{
															"nativeSrc": "3781:11:6",
															"nodeType": "YulAssignment",
															"src": "3781:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "3789:3:6",
																"nodeType": "YulIdentifier",
																"src": "3789:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3781:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3781:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3809:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3809:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3812:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3812:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3802:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:6"
																},
																"nativeSrc": "3802:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:6"
															},
															"nativeSrc": "3802:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "3802:14:6"
														},
														{
															"nativeSrc": "3825:26:6",
															"nodeType": "YulAssignment",
															"src": "3825:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3843:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3843:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3846:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3846:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3833:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3833:9:6"
																},
																"nativeSrc": "3833:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3833:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3825:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3825:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3717:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3758:3:6",
														"nodeType": "YulTypedName",
														"src": "3758:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3766:4:6",
														"nodeType": "YulTypedName",
														"src": "3766:4:6",
														"type": ""
													}
												],
												"src": "3717:141:6"
											},
											{
												"body": {
													"nativeSrc": "3908:49:6",
													"nodeType": "YulBlock",
													"src": "3908:49:6",
													"statements": [
														{
															"nativeSrc": "3918:33:6",
															"nodeType": "YulAssignment",
															"src": "3918:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3936:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3936:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3943:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3943:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3932:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3932:3:6"
																		},
																		"nativeSrc": "3932:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3932:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3948:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3948:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3928:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:6"
																},
																"nativeSrc": "3928:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3928:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3918:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3864:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3891:5:6",
														"nodeType": "YulTypedName",
														"src": "3891:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3901:6:6",
														"nodeType": "YulTypedName",
														"src": "3901:6:6",
														"type": ""
													}
												],
												"src": "3864:93:6"
											},
											{
												"body": {
													"nativeSrc": "4016:54:6",
													"nodeType": "YulBlock",
													"src": "4016:54:6",
													"statements": [
														{
															"nativeSrc": "4026:37:6",
															"nodeType": "YulAssignment",
															"src": "4026:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4051:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4051:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4057:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4057:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4047:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:6"
																},
																"nativeSrc": "4047:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4047:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4026:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4026:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3963:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3991:4:6",
														"nodeType": "YulTypedName",
														"src": "3991:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3997:5:6",
														"nodeType": "YulTypedName",
														"src": "3997:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4007:8:6",
														"nodeType": "YulTypedName",
														"src": "4007:8:6",
														"type": ""
													}
												],
												"src": "3963:107:6"
											},
											{
												"body": {
													"nativeSrc": "4152:317:6",
													"nodeType": "YulBlock",
													"src": "4152:317:6",
													"statements": [
														{
															"nativeSrc": "4162:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4162:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4183:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "4183:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4195:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4179:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4179:3:6"
																},
																"nativeSrc": "4179:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4179:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4166:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4166:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4206:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4206:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4248:66:6",
																		"nodeType": "YulLiteral",
																		"src": "4248:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4218:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4218:18:6"
																},
																"nativeSrc": "4218:97:6",
																"nodeType": "YulFunctionCall",
																"src": "4218:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4210:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4210:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4324:51:6",
															"nodeType": "YulAssignment",
															"src": "4324:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4355:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4355:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4366:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4366:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4336:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:18:6"
																},
																"nativeSrc": "4336:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4336:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4324:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4324:8:6"
																}
															]
														},
														{
															"nativeSrc": "4384:30:6",
															"nodeType": "YulAssignment",
															"src": "4384:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4397:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4397:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4408:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4408:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4404:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:6"
																		},
																		"nativeSrc": "4404:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:6"
																},
																"nativeSrc": "4393:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4393:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4384:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4384:5:6"
																}
															]
														},
														{
															"nativeSrc": "4423:40:6",
															"nodeType": "YulAssignment",
															"src": "4423:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4436:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4436:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4447:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4447:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4457:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4457:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4443:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:6"
																		},
																		"nativeSrc": "4443:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4443:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4433:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4433:2:6"
																},
																"nativeSrc": "4433:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4433:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4423:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4423:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4076:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4113:5:6",
														"nodeType": "YulTypedName",
														"src": "4113:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4120:10:6",
														"nodeType": "YulTypedName",
														"src": "4120:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4132:8:6",
														"nodeType": "YulTypedName",
														"src": "4132:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4145:6:6",
														"nodeType": "YulTypedName",
														"src": "4145:6:6",
														"type": ""
													}
												],
												"src": "4076:393:6"
											},
											{
												"body": {
													"nativeSrc": "4520:32:6",
													"nodeType": "YulBlock",
													"src": "4520:32:6",
													"statements": [
														{
															"nativeSrc": "4530:16:6",
															"nodeType": "YulAssignment",
															"src": "4530:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "4541:5:6",
																"nodeType": "YulIdentifier",
																"src": "4541:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4530:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4530:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4475:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4502:5:6",
														"nodeType": "YulTypedName",
														"src": "4502:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4512:7:6",
														"nodeType": "YulTypedName",
														"src": "4512:7:6",
														"type": ""
													}
												],
												"src": "4475:77:6"
											},
											{
												"body": {
													"nativeSrc": "4590:28:6",
													"nodeType": "YulBlock",
													"src": "4590:28:6",
													"statements": [
														{
															"nativeSrc": "4600:12:6",
															"nodeType": "YulAssignment",
															"src": "4600:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4607:5:6",
																"nodeType": "YulIdentifier",
																"src": "4607:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4600:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4558:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4576:5:6",
														"nodeType": "YulTypedName",
														"src": "4576:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4586:3:6",
														"nodeType": "YulTypedName",
														"src": "4586:3:6",
														"type": ""
													}
												],
												"src": "4558:60:6"
											},
											{
												"body": {
													"nativeSrc": "4684:82:6",
													"nodeType": "YulBlock",
													"src": "4684:82:6",
													"statements": [
														{
															"nativeSrc": "4694:66:6",
															"nodeType": "YulAssignment",
															"src": "4694:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4752:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4752:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4734:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "4734:17:6"
																				},
																				"nativeSrc": "4734:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4734:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4725:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "4725:8:6"
																		},
																		"nativeSrc": "4725:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4707:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4707:17:6"
																},
																"nativeSrc": "4707:53:6",
																"nodeType": "YulFunctionCall",
																"src": "4707:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4694:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4694:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4624:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4664:5:6",
														"nodeType": "YulTypedName",
														"src": "4664:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4674:9:6",
														"nodeType": "YulTypedName",
														"src": "4674:9:6",
														"type": ""
													}
												],
												"src": "4624:142:6"
											},
											{
												"body": {
													"nativeSrc": "4819:28:6",
													"nodeType": "YulBlock",
													"src": "4819:28:6",
													"statements": [
														{
															"nativeSrc": "4829:12:6",
															"nodeType": "YulAssignment",
															"src": "4829:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4836:5:6",
																"nodeType": "YulIdentifier",
																"src": "4836:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4829:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4772:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4805:5:6",
														"nodeType": "YulTypedName",
														"src": "4805:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4815:3:6",
														"nodeType": "YulTypedName",
														"src": "4815:3:6",
														"type": ""
													}
												],
												"src": "4772:75:6"
											},
											{
												"body": {
													"nativeSrc": "4929:193:6",
													"nodeType": "YulBlock",
													"src": "4929:193:6",
													"statements": [
														{
															"nativeSrc": "4939:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4939:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4994:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "4994:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4963:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4963:30:6"
																},
																"nativeSrc": "4963:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4963:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4943:16:6",
																	"nodeType": "YulTypedName",
																	"src": "4943:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5018:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5018:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5058:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5058:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5052:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5052:5:6"
																				},
																				"nativeSrc": "5052:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5052:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5065:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5065:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5097:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "5097:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5073:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "5073:23:6"
																				},
																				"nativeSrc": "5073:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5073:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5024:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "5024:27:6"
																		},
																		"nativeSrc": "5024:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5024:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:6"
																},
																"nativeSrc": "5011:105:6",
																"nodeType": "YulFunctionCall",
																"src": "5011:105:6"
															},
															"nativeSrc": "5011:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "5011:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4853:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4906:4:6",
														"nodeType": "YulTypedName",
														"src": "4906:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4912:6:6",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4920:7:6",
														"nodeType": "YulTypedName",
														"src": "4920:7:6",
														"type": ""
													}
												],
												"src": "4853:269:6"
											},
											{
												"body": {
													"nativeSrc": "5177:24:6",
													"nodeType": "YulBlock",
													"src": "5177:24:6",
													"statements": [
														{
															"nativeSrc": "5187:8:6",
															"nodeType": "YulAssignment",
															"src": "5187:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5194:1:6",
																"nodeType": "YulLiteral",
																"src": "5194:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5187:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5187:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5128:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5173:3:6",
														"nodeType": "YulTypedName",
														"src": "5173:3:6",
														"type": ""
													}
												],
												"src": "5128:73:6"
											},
											{
												"body": {
													"nativeSrc": "5260:136:6",
													"nodeType": "YulBlock",
													"src": "5260:136:6",
													"statements": [
														{
															"nativeSrc": "5270:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5270:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5284:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5284:30:6"
																},
																"nativeSrc": "5284:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5274:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5274:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5369:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5369:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5375:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5375:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5383:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5383:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5325:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5325:43:6"
																},
																"nativeSrc": "5325:65:6",
																"nodeType": "YulFunctionCall",
																"src": "5325:65:6"
															},
															"nativeSrc": "5325:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "5325:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5207:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5246:4:6",
														"nodeType": "YulTypedName",
														"src": "5246:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5252:6:6",
														"nodeType": "YulTypedName",
														"src": "5252:6:6",
														"type": ""
													}
												],
												"src": "5207:189:6"
											},
											{
												"body": {
													"nativeSrc": "5452:136:6",
													"nodeType": "YulBlock",
													"src": "5452:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5519:63:6",
																"nodeType": "YulBlock",
																"src": "5519:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5563:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5563:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5570:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5533:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "5533:29:6"
																			},
																			"nativeSrc": "5533:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5533:39:6"
																		},
																		"nativeSrc": "5533:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5533:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5472:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5472:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5479:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5479:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5469:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5469:2:6"
																},
																"nativeSrc": "5469:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5469:14:6"
															},
															"nativeSrc": "5462:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5484:26:6",
																"nodeType": "YulBlock",
																"src": "5484:26:6",
																"statements": [
																	{
																		"nativeSrc": "5486:22:6",
																		"nodeType": "YulAssignment",
																		"src": "5486:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5499:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5499:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5506:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5506:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5495:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5495:3:6"
																			},
																			"nativeSrc": "5495:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5495:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5486:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5486:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5466:2:6",
																"nodeType": "YulBlock",
																"src": "5466:2:6",
																"statements": []
															},
															"src": "5462:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5402:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5440:5:6",
														"nodeType": "YulTypedName",
														"src": "5440:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5447:3:6",
														"nodeType": "YulTypedName",
														"src": "5447:3:6",
														"type": ""
													}
												],
												"src": "5402:186:6"
											},
											{
												"body": {
													"nativeSrc": "5673:464:6",
													"nodeType": "YulBlock",
													"src": "5673:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5699:431:6",
																"nodeType": "YulBlock",
																"src": "5699:431:6",
																"statements": [
																	{
																		"nativeSrc": "5713:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5713:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5761:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5761:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5729:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "5729:31:6"
																			},
																			"nativeSrc": "5729:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5729:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5717:8:6",
																				"nodeType": "YulTypedName",
																				"src": "5717:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5780:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5780:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5803:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "5803:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5831:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5831:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5813:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "5813:17:6"
																					},
																					"nativeSrc": "5813:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5813:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5799:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5799:3:6"
																			},
																			"nativeSrc": "5799:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5799:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5784:11:6",
																				"nodeType": "YulTypedName",
																				"src": "5784:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6000:27:6",
																			"nodeType": "YulBlock",
																			"src": "6000:27:6",
																			"statements": [
																				{
																					"nativeSrc": "6002:23:6",
																					"nodeType": "YulAssignment",
																					"src": "6002:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6017:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6017:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6002:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "6002:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5984:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5984:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5996:2:6",
																					"nodeType": "YulLiteral",
																					"src": "5996:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5981:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "5981:2:6"
																			},
																			"nativeSrc": "5981:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5981:18:6"
																		},
																		"nativeSrc": "5978:49:6",
																		"nodeType": "YulIf",
																		"src": "5978:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6069:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "6069:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6086:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "6086:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6114:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6114:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6096:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "6096:17:6"
																							},
																							"nativeSrc": "6096:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6096:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6082:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6082:3:6"
																					},
																					"nativeSrc": "6082:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6082:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6040:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "6040:28:6"
																			},
																			"nativeSrc": "6040:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6040:80:6"
																		},
																		"nativeSrc": "6040:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6040:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5690:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5690:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5695:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5695:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5687:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5687:2:6"
																},
																"nativeSrc": "5687:11:6",
																"nodeType": "YulFunctionCall",
																"src": "5687:11:6"
															},
															"nativeSrc": "5684:446:6",
															"nodeType": "YulIf",
															"src": "5684:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5594:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5649:5:6",
														"nodeType": "YulTypedName",
														"src": "5649:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5656:3:6",
														"nodeType": "YulTypedName",
														"src": "5656:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5661:10:6",
														"nodeType": "YulTypedName",
														"src": "5661:10:6",
														"type": ""
													}
												],
												"src": "5594:543:6"
											},
											{
												"body": {
													"nativeSrc": "6206:54:6",
													"nodeType": "YulBlock",
													"src": "6206:54:6",
													"statements": [
														{
															"nativeSrc": "6216:37:6",
															"nodeType": "YulAssignment",
															"src": "6216:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6241:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6241:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6247:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6247:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6237:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:6"
																},
																"nativeSrc": "6237:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6237:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6216:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6216:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6143:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6181:4:6",
														"nodeType": "YulTypedName",
														"src": "6181:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6187:5:6",
														"nodeType": "YulTypedName",
														"src": "6187:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6197:8:6",
														"nodeType": "YulTypedName",
														"src": "6197:8:6",
														"type": ""
													}
												],
												"src": "6143:117:6"
											},
											{
												"body": {
													"nativeSrc": "6317:118:6",
													"nodeType": "YulBlock",
													"src": "6317:118:6",
													"statements": [
														{
															"nativeSrc": "6327:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6327:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6376:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6376:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6379:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6379:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6372:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6372:3:6"
																				},
																				"nativeSrc": "6372:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6372:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6391:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6391:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6387:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6387:3:6"
																				},
																				"nativeSrc": "6387:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6387:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6343:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6343:28:6"
																		},
																		"nativeSrc": "6343:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6343:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6339:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:6"
																},
																"nativeSrc": "6339:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6339:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6331:4:6",
																	"nodeType": "YulTypedName",
																	"src": "6331:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6404:25:6",
															"nodeType": "YulAssignment",
															"src": "6404:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6418:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6418:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6424:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6424:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6414:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6414:3:6"
																},
																"nativeSrc": "6414:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6414:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6404:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6266:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6294:4:6",
														"nodeType": "YulTypedName",
														"src": "6294:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6300:5:6",
														"nodeType": "YulTypedName",
														"src": "6300:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6310:6:6",
														"nodeType": "YulTypedName",
														"src": "6310:6:6",
														"type": ""
													}
												],
												"src": "6266:169:6"
											},
											{
												"body": {
													"nativeSrc": "6521:214:6",
													"nodeType": "YulBlock",
													"src": "6521:214:6",
													"statements": [
														{
															"nativeSrc": "6654:37:6",
															"nodeType": "YulAssignment",
															"src": "6654:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6681:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6681:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6687:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6687:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6662:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6662:18:6"
																},
																"nativeSrc": "6662:29:6",
																"nodeType": "YulFunctionCall",
																"src": "6662:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6654:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6654:4:6"
																}
															]
														},
														{
															"nativeSrc": "6700:29:6",
															"nodeType": "YulAssignment",
															"src": "6700:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6711:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6711:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6721:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6721:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6724:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6724:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6717:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6717:3:6"
																		},
																		"nativeSrc": "6717:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6717:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6708:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6708:2:6"
																},
																"nativeSrc": "6708:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6708:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6700:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6700:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6440:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6502:4:6",
														"nodeType": "YulTypedName",
														"src": "6502:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6508:3:6",
														"nodeType": "YulTypedName",
														"src": "6508:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6516:4:6",
														"nodeType": "YulTypedName",
														"src": "6516:4:6",
														"type": ""
													}
												],
												"src": "6440:295:6"
											},
											{
												"body": {
													"nativeSrc": "6832:1303:6",
													"nodeType": "YulBlock",
													"src": "6832:1303:6",
													"statements": [
														{
															"nativeSrc": "6843:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6843:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6890:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6890:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6857:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "6857:32:6"
																},
																"nativeSrc": "6857:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6857:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6847:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6847:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6979:22:6",
																"nodeType": "YulBlock",
																"src": "6979:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6981:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6981:16:6"
																			},
																			"nativeSrc": "6981:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6981:18:6"
																		},
																		"nativeSrc": "6981:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6981:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6951:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6951:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6959:18:6",
																		"nodeType": "YulLiteral",
																		"src": "6959:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6948:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6948:2:6"
																},
																"nativeSrc": "6948:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6948:30:6"
															},
															"nativeSrc": "6945:56:6",
															"nodeType": "YulIf",
															"src": "6945:56:6"
														},
														{
															"nativeSrc": "7011:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7011:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7057:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7057:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7051:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7051:5:6"
																		},
																		"nativeSrc": "7051:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7051:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7025:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7025:25:6"
																},
																"nativeSrc": "7025:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7025:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7015:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7015:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7156:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7156:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7162:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7162:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7170:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7110:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "7110:45:6"
																},
																"nativeSrc": "7110:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7110:67:6"
															},
															"nativeSrc": "7110:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "7110:67:6"
														},
														{
															"nativeSrc": "7187:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7187:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7204:1:6",
																"nodeType": "YulLiteral",
																"src": "7204:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7191:9:6",
																	"nodeType": "YulTypedName",
																	"src": "7191:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7215:17:6",
															"nodeType": "YulAssignment",
															"src": "7215:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7228:4:6",
																"nodeType": "YulLiteral",
																"src": "7228:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7215:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "7215:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7279:611:6",
																		"nodeType": "YulBlock",
																		"src": "7279:611:6",
																		"statements": [
																			{
																				"nativeSrc": "7293:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7293:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7312:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7312:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7324:4:6",
																									"nodeType": "YulLiteral",
																									"src": "7324:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7320:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7320:3:6"
																							},
																							"nativeSrc": "7320:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7320:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7308:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7308:3:6"
																					},
																					"nativeSrc": "7308:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7308:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7297:7:6",
																						"nodeType": "YulTypedName",
																						"src": "7297:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7344:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7344:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7390:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7390:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7358:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "7358:31:6"
																					},
																					"nativeSrc": "7358:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7358:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7348:6:6",
																						"nodeType": "YulTypedName",
																						"src": "7348:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7408:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7408:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7417:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7417:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7412:1:6",
																						"nodeType": "YulTypedName",
																						"src": "7412:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7476:163:6",
																					"nodeType": "YulBlock",
																					"src": "7476:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7501:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7501:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7519:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "7519:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7524:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "7524:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7515:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7515:3:6"
																												},
																												"nativeSrc": "7515:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7515:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7509:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "7509:5:6"
																										},
																										"nativeSrc": "7509:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7509:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7494:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7494:6:6"
																								},
																								"nativeSrc": "7494:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7494:42:6"
																							},
																							"nativeSrc": "7494:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7494:42:6"
																						},
																						{
																							"nativeSrc": "7553:24:6",
																							"nodeType": "YulAssignment",
																							"src": "7553:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7567:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7567:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7575:1:6",
																										"nodeType": "YulLiteral",
																										"src": "7575:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7563:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7563:3:6"
																								},
																								"nativeSrc": "7563:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7563:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7553:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7553:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7594:31:6",
																							"nodeType": "YulAssignment",
																							"src": "7594:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7611:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "7611:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7622:2:6",
																										"nodeType": "YulLiteral",
																										"src": "7622:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7607:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7607:3:6"
																								},
																								"nativeSrc": "7607:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7607:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7594:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "7594:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7442:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "7442:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7445:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7445:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7439:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7439:2:6"
																					},
																					"nativeSrc": "7439:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7439:14:6"
																				},
																				"nativeSrc": "7431:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7454:21:6",
																					"nodeType": "YulBlock",
																					"src": "7454:21:6",
																					"statements": [
																						{
																							"nativeSrc": "7456:17:6",
																							"nodeType": "YulAssignment",
																							"src": "7456:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7465:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "7465:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7468:4:6",
																										"nodeType": "YulLiteral",
																										"src": "7468:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7461:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7461:3:6"
																								},
																								"nativeSrc": "7461:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7461:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7456:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "7456:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7435:3:6",
																					"nodeType": "YulBlock",
																					"src": "7435:3:6",
																					"statements": []
																				},
																				"src": "7431:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "7675:156:6",
																					"nodeType": "YulBlock",
																					"src": "7675:156:6",
																					"statements": [
																						{
																							"nativeSrc": "7693:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7693:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7720:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "7720:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7725:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7725:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7716:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "7716:3:6"
																										},
																										"nativeSrc": "7716:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7716:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7710:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7710:5:6"
																								},
																								"nativeSrc": "7710:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7710:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7697:9:6",
																									"nodeType": "YulTypedName",
																									"src": "7697:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7760:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7760:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7787:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7787:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7802:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "7802:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7810:4:6",
																														"nodeType": "YulLiteral",
																														"src": "7810:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7798:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7798:3:6"
																												},
																												"nativeSrc": "7798:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7798:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7768:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "7768:18:6"
																										},
																										"nativeSrc": "7768:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7768:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7753:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7753:6:6"
																								},
																								"nativeSrc": "7753:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7753:64:6"
																							},
																							"nativeSrc": "7753:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7753:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7658:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7658:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7667:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7667:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7655:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7655:2:6"
																					},
																					"nativeSrc": "7655:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7655:19:6"
																				},
																				"nativeSrc": "7652:179:6",
																				"nodeType": "YulIf",
																				"src": "7652:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7851:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7851:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7865:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "7865:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7873:1:6",
																											"nodeType": "YulLiteral",
																											"src": "7873:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7861:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "7861:3:6"
																									},
																									"nativeSrc": "7861:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "7861:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7877:1:6",
																									"nodeType": "YulLiteral",
																									"src": "7877:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7857:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7857:3:6"
																							},
																							"nativeSrc": "7857:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7857:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7844:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7844:6:6"
																					},
																					"nativeSrc": "7844:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7844:36:6"
																				},
																				"nativeSrc": "7844:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7844:36:6"
																			}
																		]
																	},
																	"nativeSrc": "7272:618:6",
																	"nodeType": "YulCase",
																	"src": "7272:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7277:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7277:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7907:222:6",
																		"nodeType": "YulBlock",
																		"src": "7907:222:6",
																		"statements": [
																			{
																				"nativeSrc": "7921:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7921:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7934:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7934:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7925:5:6",
																						"nodeType": "YulTypedName",
																						"src": "7925:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7958:67:6",
																					"nodeType": "YulBlock",
																					"src": "7958:67:6",
																					"statements": [
																						{
																							"nativeSrc": "7976:35:6",
																							"nodeType": "YulAssignment",
																							"src": "7976:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7995:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "7995:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8000:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8000:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7991:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "7991:3:6"
																										},
																										"nativeSrc": "7991:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7991:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7985:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7985:5:6"
																								},
																								"nativeSrc": "7985:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7985:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7976:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7976:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7951:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7951:6:6"
																				},
																				"nativeSrc": "7948:77:6",
																				"nodeType": "YulIf",
																				"src": "7948:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8045:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8045:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8104:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8104:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8111:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8111:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8051:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "8051:52:6"
																							},
																							"nativeSrc": "8051:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8051:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8038:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8038:6:6"
																					},
																					"nativeSrc": "8038:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8038:81:6"
																				},
																				"nativeSrc": "8038:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8038:81:6"
																			}
																		]
																	},
																	"nativeSrc": "7899:230:6",
																	"nodeType": "YulCase",
																	"src": "7899:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7252:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7252:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7260:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7249:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7249:2:6"
																},
																"nativeSrc": "7249:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7249:14:6"
															},
															"nativeSrc": "7242:887:6",
															"nodeType": "YulSwitch",
															"src": "7242:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6740:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6821:4:6",
														"nodeType": "YulTypedName",
														"src": "6821:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6827:3:6",
														"nodeType": "YulTypedName",
														"src": "6827:3:6",
														"type": ""
													}
												],
												"src": "6740:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610dde380380610dde83398181016040528101906100319190610194565b806002908161004091906103eb565b50506104ba565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100a682610060565b810181811067ffffffffffffffff821117156100c5576100c4610070565b5b80604052505050565b5f6100d7610047565b90506100e3828261009d565b919050565b5f67ffffffffffffffff82111561010257610101610070565b5b61010b82610060565b9050602081019050919050565b8281835e5f83830152505050565b5f610138610133846100e8565b6100ce565b9050828152602081018484840111156101545761015361005c565b5b61015f848285610118565b509392505050565b5f82601f83011261017b5761017a610058565b5b815161018b848260208601610126565b91505092915050565b5f602082840312156101a9576101a8610050565b5b5f82015167ffffffffffffffff8111156101c6576101c5610054565b5b6101d284828501610167565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061022957607f821691505b60208210810361023c5761023b6101e5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261029e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610263565b6102a88683610263565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6102ec6102e76102e2846102c0565b6102c9565b6102c0565b9050919050565b5f819050919050565b610305836102d2565b610319610311826102f3565b84845461026f565b825550505050565b5f5f905090565b610330610321565b61033b8184846102fc565b505050565b5b8181101561035e576103535f82610328565b600181019050610341565b5050565b601f8211156103a35761037481610242565b61037d84610254565b8101602085101561038c578190505b6103a061039885610254565b830182610340565b50505b505050565b5f82821c905092915050565b5f6103c35f19846008026103a8565b1980831691505092915050565b5f6103db83836103b4565b9150826002028217905092915050565b6103f4826101db565b67ffffffffffffffff81111561040d5761040c610070565b5b6104178254610212565b610422828285610362565b5f60209050601f831160018114610453575f8415610441578287015190505b61044b85826103d0565b8655506104b2565b601f19841661046186610242565b5f5b8281101561048857848901518255600182019150602085019450602081019050610463565b868310156104a557848901516104a1601f8916826103b4565b8355505b6001600288020188555050505b505050505050565b610917806104c75f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80634e6ec2471461004e57806370a082311461006a57806375247a581461009a578063a9059cbb146100b6575b5f5ffd5b61006860048036038101906100639190610631565b6100d2565b005b610084600480360381019061007f919061066f565b6101d8565b60405161009191906106a9565b60405180910390f35b6100b460048036038101906100af9190610631565b61021d565b005b6100d060048036038101906100cb9190610631565b61038e565b005b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101379061071c565b60405180910390fd5b5f8111610182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017990610784565b60405180910390fd5b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101cd91906107cf565b925050819055505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161161028b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102829061071c565b60405180910390fd5b5f81116102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490610784565b60405180910390fd5b5f3390508160015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92581848460405161038193929190610811565b60405180910390a1505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f39061071c565b60405180910390fd5b5f811161043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590610784565b60405180910390fd5b805f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b490610890565b60405180910390fd5b805f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461050891906108ae565b92505081905550805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461055a91906107cf565b925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef33838360405161059493929190610811565b60405180910390a15050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105cd826105a4565b9050919050565b6105dd816105c3565b81146105e7575f5ffd5b50565b5f813590506105f8816105d4565b92915050565b5f819050919050565b610610816105fe565b811461061a575f5ffd5b50565b5f8135905061062b81610607565b92915050565b5f5f60408385031215610647576106466105a0565b5b5f610654858286016105ea565b92505060206106658582860161061d565b9150509250929050565b5f60208284031215610684576106836105a0565b5b5f610691848285016105ea565b91505092915050565b6106a3816105fe565b82525050565b5f6020820190506106bc5f83018461069a565b92915050565b5f82825260208201905092915050565b7f416464726573732063616e6e6f742062652030000000000000000000000000005f82015250565b5f6107066013836106c2565b9150610711826106d2565b602082019050919050565b5f6020820190508181035f830152610733816106fa565b9050919050565b7f5472616e73666572206372656469742063616e6e6f74206265203000000000005f82015250565b5f61076e601b836106c2565b91506107798261073a565b602082019050919050565b5f6020820190508181035f83015261079b81610762565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107d9826105fe565b91506107e4836105fe565b92508282019050808211156107fc576107fb6107a2565b5b92915050565b61080b816105c3565b82525050565b5f6060820190506108245f830186610802565b6108316020830185610802565b61083e604083018461069a565b949350505050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61087a6014836106c2565b915061088582610846565b602082019050919050565b5f6020820190508181035f8301526108a78161086e565b9050919050565b5f6108b8826105fe565b91506108c3836105fe565b92508282039050818111156108db576108da6107a2565b5b9291505056fea26469706673582212205482113e5a37bd6e1e8fff8f59b46747d348f188f7bf011cd4b6e4a6a795c42364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDDE CODESIZE SUB DUP1 PUSH2 0xDDE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x40 SWAP2 SWAP1 PUSH2 0x3EB JUMP JUMPDEST POP POP PUSH2 0x4BA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xA6 DUP3 PUSH2 0x60 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC5 JUMPI PUSH2 0xC4 PUSH2 0x70 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD7 PUSH2 0x47 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3 DUP3 DUP3 PUSH2 0x9D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x101 PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH2 0x10B DUP3 PUSH2 0x60 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x138 PUSH2 0x133 DUP5 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x154 JUMPI PUSH2 0x153 PUSH2 0x5C JUMP JUMPDEST JUMPDEST PUSH2 0x15F DUP5 DUP3 DUP6 PUSH2 0x118 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x58 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x18B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x50 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C6 JUMPI PUSH2 0x1C5 PUSH2 0x54 JUMP JUMPDEST JUMPDEST PUSH2 0x1D2 DUP5 DUP3 DUP6 ADD PUSH2 0x167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x229 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23C JUMPI PUSH2 0x23B PUSH2 0x1E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x29E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x263 JUMP JUMPDEST PUSH2 0x2A8 DUP7 DUP4 PUSH2 0x263 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2EC PUSH2 0x2E7 PUSH2 0x2E2 DUP5 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x305 DUP4 PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x319 PUSH2 0x311 DUP3 PUSH2 0x2F3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x321 JUMP JUMPDEST PUSH2 0x33B DUP2 DUP5 DUP5 PUSH2 0x2FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH2 0x353 PUSH0 DUP3 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x374 DUP2 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x37D DUP5 PUSH2 0x254 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3A0 PUSH2 0x398 DUP6 PUSH2 0x254 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x340 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3C3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3A8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3DB DUP4 DUP4 PUSH2 0x3B4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x1DB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40D JUMPI PUSH2 0x40C PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH2 0x417 DUP3 SLOAD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x422 DUP3 DUP3 DUP6 PUSH2 0x362 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x453 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x441 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x44B DUP6 DUP3 PUSH2 0x3D0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x461 DUP7 PUSH2 0x242 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x488 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x463 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4A5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4A1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3B4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x917 DUP1 PUSH2 0x4C7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x75247A58 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x381 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F3 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP1 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x8AE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x594 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CD DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F8 DUP2 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x61A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62B DUP2 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x654 DUP6 DUP3 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x665 DUP6 DUP3 DUP7 ADD PUSH2 0x61D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x684 JUMPI PUSH2 0x683 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x691 DUP5 DUP3 DUP6 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A3 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BC PUSH0 DUP4 ADD DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573732063616E6E6F74206265203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x706 PUSH1 0x13 DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x711 DUP3 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x733 DUP2 PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206372656469742063616E6E6F7420626520300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x76E PUSH1 0x1B DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x779 DUP3 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x79B DUP2 PUSH2 0x762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7D9 DUP3 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH2 0x7E4 DUP4 PUSH2 0x5FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x824 PUSH0 DUP4 ADD DUP7 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x831 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x83E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x87A PUSH1 0x14 DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x885 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A7 DUP2 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B8 DUP3 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH2 0x8C3 DUP4 PUSH2 0x5FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8DB JUMPI PUSH2 0x8DA PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP3 GT RETURNDATACOPY GAS CALLDATACOPY 0xBD PUSH15 0x1E8FFF8F59B46747D348F188F7BF01 SHR 0xD4 0xB6 RETF 0xA6 0xA7 SWAP6 0xC4 0x23 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "112:1380:5:-:0;;;412:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;462:5;455:4;:12;;;;;;:::i;:::-;;412:62;112:1380;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:524::-;2650:6;2699:2;2687:9;2678:7;2674:23;2670:32;2667:119;;;2705:79;;:::i;:::-;2667:119;2846:1;2835:9;2831:17;2825:24;2876:18;2868:6;2865:30;2862:117;;;2898:79;;:::i;:::-;2862:117;3003:74;3069:7;3060:6;3049:9;3045:22;3003:74;:::i;:::-;2993:84;;2796:291;2570:524;;;;:::o;3100:99::-;3152:6;3186:5;3180:12;3170:22;;3100:99;;;:::o;3205:180::-;3253:77;3250:1;3243:88;3350:4;3347:1;3340:15;3374:4;3371:1;3364:15;3391:320;3435:6;3472:1;3466:4;3462:12;3452:22;;3519:1;3513:4;3509:12;3540:18;3530:81;;3596:4;3588:6;3584:17;3574:27;;3530:81;3658:2;3650:6;3647:14;3627:18;3624:38;3621:84;;3677:18;;:::i;:::-;3621:84;3442:269;3391:320;;;:::o;3717:141::-;3766:4;3789:3;3781:11;;3812:3;3809:1;3802:14;3846:4;3843:1;3833:18;3825:26;;3717:141;;;:::o;3864:93::-;3901:6;3948:2;3943;3936:5;3932:14;3928:23;3918:33;;3864:93;;;:::o;3963:107::-;4007:8;4057:5;4051:4;4047:16;4026:37;;3963:107;;;;:::o;4076:393::-;4145:6;4195:1;4183:10;4179:18;4218:97;4248:66;4237:9;4218:97;:::i;:::-;4336:39;4366:8;4355:9;4336:39;:::i;:::-;4324:51;;4408:4;4404:9;4397:5;4393:21;4384:30;;4457:4;4447:8;4443:19;4436:5;4433:30;4423:40;;4152:317;;4076:393;;;;;:::o;4475:77::-;4512:7;4541:5;4530:16;;4475:77;;;:::o;4558:60::-;4586:3;4607:5;4600:12;;4558:60;;;:::o;4624:142::-;4674:9;4707:53;4725:34;4734:24;4752:5;4734:24;:::i;:::-;4725:34;:::i;:::-;4707:53;:::i;:::-;4694:66;;4624:142;;;:::o;4772:75::-;4815:3;4836:5;4829:12;;4772:75;;;:::o;4853:269::-;4963:39;4994:7;4963:39;:::i;:::-;5024:91;5073:41;5097:16;5073:41;:::i;:::-;5065:6;5058:4;5052:11;5024:91;:::i;:::-;5018:4;5011:105;4929:193;4853:269;;;:::o;5128:73::-;5173:3;5194:1;5187:8;;5128:73;:::o;5207:189::-;5284:32;;:::i;:::-;5325:65;5383:6;5375;5369:4;5325:65;:::i;:::-;5260:136;5207:189;;:::o;5402:186::-;5462:120;5479:3;5472:5;5469:14;5462:120;;;5533:39;5570:1;5563:5;5533:39;:::i;:::-;5506:1;5499:5;5495:13;5486:22;;5462:120;;;5402:186;;:::o;5594:543::-;5695:2;5690:3;5687:11;5684:446;;;5729:38;5761:5;5729:38;:::i;:::-;5813:29;5831:10;5813:29;:::i;:::-;5803:8;5799:44;5996:2;5984:10;5981:18;5978:49;;;6017:8;6002:23;;5978:49;6040:80;6096:22;6114:3;6096:22;:::i;:::-;6086:8;6082:37;6069:11;6040:80;:::i;:::-;5699:431;;5684:446;5594:543;;;:::o;6143:117::-;6197:8;6247:5;6241:4;6237:16;6216:37;;6143:117;;;;:::o;6266:169::-;6310:6;6343:51;6391:1;6387:6;6379:5;6376:1;6372:13;6343:51;:::i;:::-;6339:56;6424:4;6418;6414:15;6404:25;;6317:118;6266:169;;;;:::o;6440:295::-;6516:4;6662:29;6687:3;6681:4;6662:29;:::i;:::-;6654:37;;6724:3;6721:1;6717:11;6711:4;6708:21;6700:29;;6440:295;;;;:::o;6740:1395::-;6857:37;6890:3;6857:37;:::i;:::-;6959:18;6951:6;6948:30;6945:56;;;6981:18;;:::i;:::-;6945:56;7025:38;7057:4;7051:11;7025:38;:::i;:::-;7110:67;7170:6;7162;7156:4;7110:67;:::i;:::-;7204:1;7228:4;7215:17;;7260:2;7252:6;7249:14;7277:1;7272:618;;;;7934:1;7951:6;7948:77;;;8000:9;7995:3;7991:19;7985:26;7976:35;;7948:77;8051:67;8111:6;8104:5;8051:67;:::i;:::-;8045:4;8038:81;7907:222;7242:887;;7272:618;7324:4;7320:9;7312:6;7308:22;7358:37;7390:4;7358:37;:::i;:::-;7417:1;7431:208;7445:7;7442:1;7439:14;7431:208;;;7524:9;7519:3;7515:19;7509:26;7501:6;7494:42;7575:1;7567:6;7563:14;7553:24;;7622:2;7611:9;7607:18;7594:31;;7468:4;7465:1;7461:12;7456:17;;7431:208;;;7667:6;7658:7;7655:19;7652:179;;;7725:9;7720:3;7716:19;7710:26;7768:48;7810:4;7802:6;7798:17;7787:9;7768:48;:::i;:::-;7760:6;7753:64;7675:156;7652:179;7877:1;7873;7865:6;7861:14;7857:22;7851:4;7844:36;7279:611;;;7242:887;;6832:1303;;;6740:1395;;:::o;112:1380:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_mint_968": {
									"entryPoint": 210,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approval_882": {
									"entryPoint": 541,
									"id": 882,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_838": {
									"entryPoint": 472,
									"id": 838,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transfer_937": {
									"entryPoint": 910,
									"id": 937,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6616:6",
										"nodeType": "YulBlock",
										"src": "0:6616:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1280:391:6",
													"nodeType": "YulBlock",
													"src": "1280:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:6",
																"nodeType": "YulBlock",
																"src": "1326:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:6"
																			},
																			"nativeSrc": "1328:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:6"
																		},
																		"nativeSrc": "1328:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:6"
																		},
																		"nativeSrc": "1297:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:6"
															},
															"nativeSrc": "1290:119:6",
															"nodeType": "YulIf",
															"src": "1290:119:6"
														},
														{
															"nativeSrc": "1419:117:6",
															"nodeType": "YulBlock",
															"src": "1419:117:6",
															"statements": [
																{
																	"nativeSrc": "1434:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:6"
																				},
																				"nativeSrc": "1494:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:6"
																		},
																		"nativeSrc": "1473:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:6",
															"nodeType": "YulBlock",
															"src": "1546:118:6",
															"statements": [
																{
																	"nativeSrc": "1561:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:6"
																				},
																				"nativeSrc": "1622:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:6"
																		},
																		"nativeSrc": "1601:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:6",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													}
												],
												"src": "1197:474:6"
											},
											{
												"body": {
													"nativeSrc": "1743:263:6",
													"nodeType": "YulBlock",
													"src": "1743:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1789:83:6",
																"nodeType": "YulBlock",
																"src": "1789:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1791:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1791:77:6"
																			},
																			"nativeSrc": "1791:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1791:79:6"
																		},
																		"nativeSrc": "1791:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1764:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1760:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:6"
																		},
																		"nativeSrc": "1760:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1785:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1756:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:6"
																},
																"nativeSrc": "1756:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1756:32:6"
															},
															"nativeSrc": "1753:119:6",
															"nodeType": "YulIf",
															"src": "1753:119:6"
														},
														{
															"nativeSrc": "1882:117:6",
															"nodeType": "YulBlock",
															"src": "1882:117:6",
															"statements": [
																{
																	"nativeSrc": "1897:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1897:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1911:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1901:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1901:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1926:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1926:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1961:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1972:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1957:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:6"
																				},
																				"nativeSrc": "1957:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1981:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1936:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:6"
																		},
																		"nativeSrc": "1936:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1926:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1677:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1713:9:6",
														"nodeType": "YulTypedName",
														"src": "1713:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1724:7:6",
														"nodeType": "YulTypedName",
														"src": "1724:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1736:6:6",
														"nodeType": "YulTypedName",
														"src": "1736:6:6",
														"type": ""
													}
												],
												"src": "1677:329:6"
											},
											{
												"body": {
													"nativeSrc": "2077:53:6",
													"nodeType": "YulBlock",
													"src": "2077:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2094:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2117:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2099:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2099:17:6"
																		},
																		"nativeSrc": "2099:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2099:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:6"
																},
																"nativeSrc": "2087:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2087:37:6"
															},
															"nativeSrc": "2087:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2087:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2012:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2065:5:6",
														"nodeType": "YulTypedName",
														"src": "2065:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2072:3:6",
														"nodeType": "YulTypedName",
														"src": "2072:3:6",
														"type": ""
													}
												],
												"src": "2012:118:6"
											},
											{
												"body": {
													"nativeSrc": "2234:124:6",
													"nodeType": "YulBlock",
													"src": "2234:124:6",
													"statements": [
														{
															"nativeSrc": "2244:26:6",
															"nodeType": "YulAssignment",
															"src": "2244:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2256:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2267:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2252:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:6"
																},
																"nativeSrc": "2252:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2252:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2244:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2324:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2337:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2333:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:6"
																		},
																		"nativeSrc": "2333:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2280:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:6"
																},
																"nativeSrc": "2280:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2280:71:6"
															},
															"nativeSrc": "2280:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2136:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2206:9:6",
														"nodeType": "YulTypedName",
														"src": "2206:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2218:6:6",
														"nodeType": "YulTypedName",
														"src": "2218:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2229:4:6",
														"nodeType": "YulTypedName",
														"src": "2229:4:6",
														"type": ""
													}
												],
												"src": "2136:222:6"
											},
											{
												"body": {
													"nativeSrc": "2460:73:6",
													"nodeType": "YulBlock",
													"src": "2460:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2477:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2482:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2482:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:6"
																},
																"nativeSrc": "2470:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2470:19:6"
															},
															"nativeSrc": "2470:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2470:19:6"
														},
														{
															"nativeSrc": "2498:29:6",
															"nodeType": "YulAssignment",
															"src": "2498:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2517:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2517:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2522:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2522:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2513:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:6"
																},
																"nativeSrc": "2513:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2513:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2498:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "2498:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2364:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2432:3:6",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2437:6:6",
														"nodeType": "YulTypedName",
														"src": "2437:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2448:11:6",
														"nodeType": "YulTypedName",
														"src": "2448:11:6",
														"type": ""
													}
												],
												"src": "2364:169:6"
											},
											{
												"body": {
													"nativeSrc": "2645:63:6",
													"nodeType": "YulBlock",
													"src": "2645:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2663:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:6"
																		},
																		"nativeSrc": "2663:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2663:14:6"
																	},
																	{
																		"hexValue": "416464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nativeSrc": "2679:21:6",
																		"nodeType": "YulLiteral",
																		"src": "2679:21:6",
																		"type": "",
																		"value": "Address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:6"
																},
																"nativeSrc": "2656:45:6",
																"nodeType": "YulFunctionCall",
																"src": "2656:45:6"
															},
															"nativeSrc": "2656:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "2656:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
												"nativeSrc": "2539:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2637:6:6",
														"nodeType": "YulTypedName",
														"src": "2637:6:6",
														"type": ""
													}
												],
												"src": "2539:169:6"
											},
											{
												"body": {
													"nativeSrc": "2860:220:6",
													"nodeType": "YulBlock",
													"src": "2860:220:6",
													"statements": [
														{
															"nativeSrc": "2870:74:6",
															"nodeType": "YulAssignment",
															"src": "2870:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2936:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2936:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2941:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2877:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2877:58:6"
																},
																"nativeSrc": "2877:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2877:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2870:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3042:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3042:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																	"nativeSrc": "2953:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "2953:88:6"
																},
																"nativeSrc": "2953:93:6",
																"nodeType": "YulFunctionCall",
																"src": "2953:93:6"
															},
															"nativeSrc": "2953:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "2953:93:6"
														},
														{
															"nativeSrc": "3055:19:6",
															"nodeType": "YulAssignment",
															"src": "3055:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3066:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3066:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3071:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3071:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3062:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:6"
																},
																"nativeSrc": "3062:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3062:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3055:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2714:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2848:3:6",
														"nodeType": "YulTypedName",
														"src": "2848:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2856:3:6",
														"nodeType": "YulTypedName",
														"src": "2856:3:6",
														"type": ""
													}
												],
												"src": "2714:366:6"
											},
											{
												"body": {
													"nativeSrc": "3257:248:6",
													"nodeType": "YulBlock",
													"src": "3257:248:6",
													"statements": [
														{
															"nativeSrc": "3267:26:6",
															"nodeType": "YulAssignment",
															"src": "3267:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3279:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3279:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3290:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3275:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3275:3:6"
																},
																"nativeSrc": "3275:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3275:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3267:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3267:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3325:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3325:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3310:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3310:3:6"
																		},
																		"nativeSrc": "3310:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3333:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3333:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3339:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3329:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:6"
																		},
																		"nativeSrc": "3329:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3329:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3303:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3303:6:6"
																},
																"nativeSrc": "3303:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3303:47:6"
															},
															"nativeSrc": "3303:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3303:47:6"
														},
														{
															"nativeSrc": "3359:139:6",
															"nodeType": "YulAssignment",
															"src": "3359:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3493:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3493:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3367:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "3367:124:6"
																},
																"nativeSrc": "3367:131:6",
																"nodeType": "YulFunctionCall",
																"src": "3367:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3359:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3359:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3086:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3237:9:6",
														"nodeType": "YulTypedName",
														"src": "3237:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3252:4:6",
														"nodeType": "YulTypedName",
														"src": "3252:4:6",
														"type": ""
													}
												],
												"src": "3086:419:6"
											},
											{
												"body": {
													"nativeSrc": "3617:71:6",
													"nodeType": "YulBlock",
													"src": "3617:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3639:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3639:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3647:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3647:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3635:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:6"
																		},
																		"nativeSrc": "3635:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:14:6"
																	},
																	{
																		"hexValue": "5472616e73666572206372656469742063616e6e6f742062652030",
																		"kind": "string",
																		"nativeSrc": "3651:29:6",
																		"nodeType": "YulLiteral",
																		"src": "3651:29:6",
																		"type": "",
																		"value": "Transfer credit cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3628:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3628:6:6"
																},
																"nativeSrc": "3628:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3628:53:6"
															},
															"nativeSrc": "3628:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "3628:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
												"nativeSrc": "3511:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3609:6:6",
														"nodeType": "YulTypedName",
														"src": "3609:6:6",
														"type": ""
													}
												],
												"src": "3511:177:6"
											},
											{
												"body": {
													"nativeSrc": "3840:220:6",
													"nodeType": "YulBlock",
													"src": "3840:220:6",
													"statements": [
														{
															"nativeSrc": "3850:74:6",
															"nodeType": "YulAssignment",
															"src": "3850:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3916:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3916:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3921:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3921:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3857:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "3857:58:6"
																},
																"nativeSrc": "3857:67:6",
																"nodeType": "YulFunctionCall",
																"src": "3857:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4022:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4022:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																	"nativeSrc": "3933:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "3933:88:6"
																},
																"nativeSrc": "3933:93:6",
																"nodeType": "YulFunctionCall",
																"src": "3933:93:6"
															},
															"nativeSrc": "3933:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "3933:93:6"
														},
														{
															"nativeSrc": "4035:19:6",
															"nodeType": "YulAssignment",
															"src": "4035:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4046:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4046:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4051:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4051:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4042:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:6"
																},
																"nativeSrc": "4042:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4042:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4035:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3694:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3828:3:6",
														"nodeType": "YulTypedName",
														"src": "3828:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3836:3:6",
														"nodeType": "YulTypedName",
														"src": "3836:3:6",
														"type": ""
													}
												],
												"src": "3694:366:6"
											},
											{
												"body": {
													"nativeSrc": "4237:248:6",
													"nodeType": "YulBlock",
													"src": "4237:248:6",
													"statements": [
														{
															"nativeSrc": "4247:26:6",
															"nodeType": "YulAssignment",
															"src": "4247:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4259:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4270:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4270:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4255:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:6"
																},
																"nativeSrc": "4255:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4255:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4247:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4247:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4294:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4294:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4305:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4305:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4290:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:6"
																		},
																		"nativeSrc": "4290:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4313:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4313:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4319:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4309:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4309:3:6"
																		},
																		"nativeSrc": "4309:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4309:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4283:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:6"
																},
																"nativeSrc": "4283:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4283:47:6"
															},
															"nativeSrc": "4283:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4283:47:6"
														},
														{
															"nativeSrc": "4339:139:6",
															"nodeType": "YulAssignment",
															"src": "4339:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4473:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4473:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4347:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4347:124:6"
																},
																"nativeSrc": "4347:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4347:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4339:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4066:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4217:9:6",
														"nodeType": "YulTypedName",
														"src": "4217:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4232:4:6",
														"nodeType": "YulTypedName",
														"src": "4232:4:6",
														"type": ""
													}
												],
												"src": "4066:419:6"
											},
											{
												"body": {
													"nativeSrc": "4519:152:6",
													"nodeType": "YulBlock",
													"src": "4519:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4539:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:6"
																},
																"nativeSrc": "4529:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4529:88:6"
															},
															"nativeSrc": "4529:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4529:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4633:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4633:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4636:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4636:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:6"
																},
																"nativeSrc": "4626:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4626:15:6"
															},
															"nativeSrc": "4626:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4626:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4657:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4657:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4660:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4660:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4650:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4650:6:6"
																},
																"nativeSrc": "4650:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4650:15:6"
															},
															"nativeSrc": "4650:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4650:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4491:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4491:180:6"
											},
											{
												"body": {
													"nativeSrc": "4721:147:6",
													"nodeType": "YulBlock",
													"src": "4721:147:6",
													"statements": [
														{
															"nativeSrc": "4731:25:6",
															"nodeType": "YulAssignment",
															"src": "4731:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4754:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4754:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4736:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4736:17:6"
																},
																"nativeSrc": "4736:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4736:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4731:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4731:1:6"
																}
															]
														},
														{
															"nativeSrc": "4765:25:6",
															"nodeType": "YulAssignment",
															"src": "4765:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4788:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4788:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4770:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4770:17:6"
																},
																"nativeSrc": "4770:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4770:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4765:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4765:1:6"
																}
															]
														},
														{
															"nativeSrc": "4799:16:6",
															"nodeType": "YulAssignment",
															"src": "4799:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4810:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4810:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4813:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4813:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4806:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4806:3:6"
																},
																"nativeSrc": "4806:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4806:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4799:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4799:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4839:22:6",
																"nodeType": "YulBlock",
																"src": "4839:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4841:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4841:16:6"
																			},
																			"nativeSrc": "4841:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4841:18:6"
																		},
																		"nativeSrc": "4841:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4841:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4831:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4831:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4834:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4834:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4828:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4828:2:6"
																},
																"nativeSrc": "4828:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4828:10:6"
															},
															"nativeSrc": "4825:36:6",
															"nodeType": "YulIf",
															"src": "4825:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4677:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4708:1:6",
														"nodeType": "YulTypedName",
														"src": "4708:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4711:1:6",
														"nodeType": "YulTypedName",
														"src": "4711:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4717:3:6",
														"nodeType": "YulTypedName",
														"src": "4717:3:6",
														"type": ""
													}
												],
												"src": "4677:191:6"
											},
											{
												"body": {
													"nativeSrc": "4939:53:6",
													"nodeType": "YulBlock",
													"src": "4939:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4956:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4956:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4979:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4979:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4961:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4961:17:6"
																		},
																		"nativeSrc": "4961:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4961:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4949:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4949:6:6"
																},
																"nativeSrc": "4949:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4949:37:6"
															},
															"nativeSrc": "4949:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4949:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4874:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4927:5:6",
														"nodeType": "YulTypedName",
														"src": "4927:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4934:3:6",
														"nodeType": "YulTypedName",
														"src": "4934:3:6",
														"type": ""
													}
												],
												"src": "4874:118:6"
											},
											{
												"body": {
													"nativeSrc": "5152:288:6",
													"nodeType": "YulBlock",
													"src": "5152:288:6",
													"statements": [
														{
															"nativeSrc": "5162:26:6",
															"nodeType": "YulAssignment",
															"src": "5162:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5174:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5174:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5185:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5185:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:6"
																},
																"nativeSrc": "5170:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5170:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5162:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5162:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5242:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5255:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5255:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5266:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5266:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5251:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5251:3:6"
																		},
																		"nativeSrc": "5251:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5251:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5198:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5198:43:6"
																},
																"nativeSrc": "5198:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5198:71:6"
															},
															"nativeSrc": "5198:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5198:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5323:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5336:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5336:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5347:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5347:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5332:3:6"
																		},
																		"nativeSrc": "5332:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5279:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5279:43:6"
																},
																"nativeSrc": "5279:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5279:72:6"
															},
															"nativeSrc": "5279:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5279:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5405:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5405:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5418:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5418:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5429:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5429:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5414:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5414:3:6"
																		},
																		"nativeSrc": "5414:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5414:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5361:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5361:43:6"
																},
																"nativeSrc": "5361:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5361:72:6"
															},
															"nativeSrc": "5361:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5361:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4998:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5108:9:6",
														"nodeType": "YulTypedName",
														"src": "5108:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5120:6:6",
														"nodeType": "YulTypedName",
														"src": "5120:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5128:6:6",
														"nodeType": "YulTypedName",
														"src": "5128:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5136:6:6",
														"nodeType": "YulTypedName",
														"src": "5136:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5147:4:6",
														"nodeType": "YulTypedName",
														"src": "5147:4:6",
														"type": ""
													}
												],
												"src": "4998:442:6"
											},
											{
												"body": {
													"nativeSrc": "5552:64:6",
													"nodeType": "YulBlock",
													"src": "5552:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5574:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5574:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5582:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5582:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5570:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:6"
																		},
																		"nativeSrc": "5570:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5570:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5586:22:6",
																		"nodeType": "YulLiteral",
																		"src": "5586:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5563:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5563:6:6"
																},
																"nativeSrc": "5563:46:6",
																"nodeType": "YulFunctionCall",
																"src": "5563:46:6"
															},
															"nativeSrc": "5563:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "5563:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "5446:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5544:6:6",
														"nodeType": "YulTypedName",
														"src": "5544:6:6",
														"type": ""
													}
												],
												"src": "5446:170:6"
											},
											{
												"body": {
													"nativeSrc": "5768:220:6",
													"nodeType": "YulBlock",
													"src": "5768:220:6",
													"statements": [
														{
															"nativeSrc": "5778:74:6",
															"nodeType": "YulAssignment",
															"src": "5778:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5844:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5849:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5849:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5785:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5785:58:6"
																},
																"nativeSrc": "5785:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5785:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5778:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5950:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5950:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "5861:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5861:88:6"
																},
																"nativeSrc": "5861:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5861:93:6"
															},
															"nativeSrc": "5861:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5861:93:6"
														},
														{
															"nativeSrc": "5963:19:6",
															"nodeType": "YulAssignment",
															"src": "5963:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5974:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5974:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5979:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5979:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5970:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5970:3:6"
																},
																"nativeSrc": "5970:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5970:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5963:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5622:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5756:3:6",
														"nodeType": "YulTypedName",
														"src": "5756:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5764:3:6",
														"nodeType": "YulTypedName",
														"src": "5764:3:6",
														"type": ""
													}
												],
												"src": "5622:366:6"
											},
											{
												"body": {
													"nativeSrc": "6165:248:6",
													"nodeType": "YulBlock",
													"src": "6165:248:6",
													"statements": [
														{
															"nativeSrc": "6175:26:6",
															"nodeType": "YulAssignment",
															"src": "6175:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6187:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6187:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6198:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6183:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:6"
																},
																"nativeSrc": "6183:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6183:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6175:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6175:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6233:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6233:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:6"
																		},
																		"nativeSrc": "6218:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6218:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6241:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6241:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6247:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6247:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6237:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6237:3:6"
																		},
																		"nativeSrc": "6237:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6237:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6211:6:6"
																},
																"nativeSrc": "6211:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6211:47:6"
															},
															"nativeSrc": "6211:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6211:47:6"
														},
														{
															"nativeSrc": "6267:139:6",
															"nodeType": "YulAssignment",
															"src": "6267:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6401:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6401:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6275:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6275:124:6"
																},
																"nativeSrc": "6275:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6275:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6267:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6267:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5994:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6145:9:6",
														"nodeType": "YulTypedName",
														"src": "6145:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6160:4:6",
														"nodeType": "YulTypedName",
														"src": "6160:4:6",
														"type": ""
													}
												],
												"src": "5994:419:6"
											},
											{
												"body": {
													"nativeSrc": "6464:149:6",
													"nodeType": "YulBlock",
													"src": "6464:149:6",
													"statements": [
														{
															"nativeSrc": "6474:25:6",
															"nodeType": "YulAssignment",
															"src": "6474:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6497:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6497:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6479:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6479:17:6"
																},
																"nativeSrc": "6479:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6479:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6474:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6474:1:6"
																}
															]
														},
														{
															"nativeSrc": "6508:25:6",
															"nodeType": "YulAssignment",
															"src": "6508:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6531:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6531:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6513:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6513:17:6"
																},
																"nativeSrc": "6513:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6513:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6508:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6508:1:6"
																}
															]
														},
														{
															"nativeSrc": "6542:17:6",
															"nodeType": "YulAssignment",
															"src": "6542:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6554:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6554:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6557:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6557:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6550:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6550:3:6"
																},
																"nativeSrc": "6550:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6550:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6542:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6542:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6584:22:6",
																"nodeType": "YulBlock",
																"src": "6584:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6586:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6586:16:6"
																			},
																			"nativeSrc": "6586:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6586:18:6"
																		},
																		"nativeSrc": "6586:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6586:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6575:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6575:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6581:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6572:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6572:2:6"
																},
																"nativeSrc": "6572:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6572:11:6"
															},
															"nativeSrc": "6569:37:6",
															"nodeType": "YulIf",
															"src": "6569:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6419:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6450:1:6",
														"nodeType": "YulTypedName",
														"src": "6450:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6453:1:6",
														"nodeType": "YulTypedName",
														"src": "6453:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6459:4:6",
														"nodeType": "YulTypedName",
														"src": "6459:4:6",
														"type": ""
													}
												],
												"src": "6419:194:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address cannot be 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer credit cannot be 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80634e6ec2471461004e57806370a082311461006a57806375247a581461009a578063a9059cbb146100b6575b5f5ffd5b61006860048036038101906100639190610631565b6100d2565b005b610084600480360381019061007f919061066f565b6101d8565b60405161009191906106a9565b60405180910390f35b6100b460048036038101906100af9190610631565b61021d565b005b6100d060048036038101906100cb9190610631565b61038e565b005b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101379061071c565b60405180910390fd5b5f8111610182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017990610784565b60405180910390fd5b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101cd91906107cf565b925050819055505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161161028b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102829061071c565b60405180910390fd5b5f81116102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490610784565b60405180910390fd5b5f3390508160015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92581848460405161038193929190610811565b60405180910390a1505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f39061071c565b60405180910390fd5b5f811161043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590610784565b60405180910390fd5b805f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b490610890565b60405180910390fd5b805f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461050891906108ae565b92505081905550805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461055a91906107cf565b925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef33838360405161059493929190610811565b60405180910390a15050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105cd826105a4565b9050919050565b6105dd816105c3565b81146105e7575f5ffd5b50565b5f813590506105f8816105d4565b92915050565b5f819050919050565b610610816105fe565b811461061a575f5ffd5b50565b5f8135905061062b81610607565b92915050565b5f5f60408385031215610647576106466105a0565b5b5f610654858286016105ea565b92505060206106658582860161061d565b9150509250929050565b5f60208284031215610684576106836105a0565b5b5f610691848285016105ea565b91505092915050565b6106a3816105fe565b82525050565b5f6020820190506106bc5f83018461069a565b92915050565b5f82825260208201905092915050565b7f416464726573732063616e6e6f742062652030000000000000000000000000005f82015250565b5f6107066013836106c2565b9150610711826106d2565b602082019050919050565b5f6020820190508181035f830152610733816106fa565b9050919050565b7f5472616e73666572206372656469742063616e6e6f74206265203000000000005f82015250565b5f61076e601b836106c2565b91506107798261073a565b602082019050919050565b5f6020820190508181035f83015261079b81610762565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107d9826105fe565b91506107e4836105fe565b92508282019050808211156107fc576107fb6107a2565b5b92915050565b61080b816105c3565b82525050565b5f6060820190506108245f830186610802565b6108316020830185610802565b61083e604083018461069a565b949350505050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61087a6014836106c2565b915061088582610846565b602082019050919050565b5f6020820190508181035f8301526108a78161086e565b9050919050565b5f6108b8826105fe565b91506108c3836105fe565b92508282039050818111156108db576108da6107a2565b5b9291505056fea26469706673582212205482113e5a37bd6e1e8fff8f59b46747d348f188f7bf011cd4b6e4a6a795c42364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x75247A58 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x381 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F3 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP1 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x8AE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x594 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CD DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F8 DUP2 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x61A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62B DUP2 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x654 DUP6 DUP3 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x665 DUP6 DUP3 DUP7 ADD PUSH2 0x61D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x684 JUMPI PUSH2 0x683 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x691 DUP5 DUP3 DUP6 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A3 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BC PUSH0 DUP4 ADD DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573732063616E6E6F74206265203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x706 PUSH1 0x13 DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x711 DUP3 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x733 DUP2 PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206372656469742063616E6E6F7420626520300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x76E PUSH1 0x1B DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x779 DUP3 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x79B DUP2 PUSH2 0x762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7D9 DUP3 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH2 0x7E4 DUP4 PUSH2 0x5FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x824 PUSH0 DUP4 ADD DUP7 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x831 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x83E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x87A PUSH1 0x14 DUP4 PUSH2 0x6C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x885 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A7 DUP2 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B8 DUP3 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH2 0x8C3 DUP4 PUSH2 0x5FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8DB JUMPI PUSH2 0x8DA PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP3 GT RETURNDATACOPY GAS CALLDATACOPY 0xBD PUSH15 0x1E8FFF8F59B46747D348F188F7BF01 SHR 0xD4 0xB6 RETF 0xA6 0xA7 SWAP6 0xC4 0x23 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "112:1380:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:319;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;908:369;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1283:206;1364:1;1350:16;;:2;:16;;;1342:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1417:1;1408:6;:10;1400:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1476:6;1460:8;:12;1469:2;1460:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1283:206;;:::o;480:97::-;533:4;556:8;:14;565:4;556:14;;;;;;;;;;;;;;;;549:21;;480:97;;;:::o;583:319::-;679:1;661:20;;:7;:20;;;653:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;732:1;723:6;:10;715:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;775:13;791:10;775:26;;841:6;811:11;:18;823:5;811:18;;;;;;;;;;;;;;;:27;830:7;811:27;;;;;;;;;;;;;;;:36;;;;862:32;871:5;878:7;887:6;862:32;;;;;;;;:::i;:::-;;;;;;;;643:259;583:319;;:::o;908:369::-;992:1;978:16;;:2;:16;;;970:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1045:1;1036:6;:10;1028:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1120:6;1096:8;:20;1105:10;1096:20;;;;;;;;;;;;;;;;:30;;1088:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1185:6;1161:8;:20;1170:10;1161:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1217:6;1201:8;:12;1210:2;1201:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1238:32;1247:10;1259:2;1263:6;1238:32;;;;;;;;:::i;:::-;;;;;;;;908:369;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:329::-;1736:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:119;;;1791:79;;:::i;:::-;1753:119;1911:1;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1882:117;1677:329;;;;:::o;2012:118::-;2099:24;2117:5;2099:24;:::i;:::-;2094:3;2087:37;2012:118;;:::o;2136:222::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2136:222;;;;:::o;2364:169::-;2448:11;2482:6;2477:3;2470:19;2522:4;2517:3;2513:14;2498:29;;2364:169;;;;:::o;2539:::-;2679:21;2675:1;2667:6;2663:14;2656:45;2539:169;:::o;2714:366::-;2856:3;2877:67;2941:2;2936:3;2877:67;:::i;:::-;2870:74;;2953:93;3042:3;2953:93;:::i;:::-;3071:2;3066:3;3062:12;3055:19;;2714:366;;;:::o;3086:419::-;3252:4;3290:2;3279:9;3275:18;3267:26;;3339:9;3333:4;3329:20;3325:1;3314:9;3310:17;3303:47;3367:131;3493:4;3367:131;:::i;:::-;3359:139;;3086:419;;;:::o;3511:177::-;3651:29;3647:1;3639:6;3635:14;3628:53;3511:177;:::o;3694:366::-;3836:3;3857:67;3921:2;3916:3;3857:67;:::i;:::-;3850:74;;3933:93;4022:3;3933:93;:::i;:::-;4051:2;4046:3;4042:12;4035:19;;3694:366;;;:::o;4066:419::-;4232:4;4270:2;4259:9;4255:18;4247:26;;4319:9;4313:4;4309:20;4305:1;4294:9;4290:17;4283:47;4347:131;4473:4;4347:131;:::i;:::-;4339:139;;4066:419;;;:::o;4491:180::-;4539:77;4536:1;4529:88;4636:4;4633:1;4626:15;4660:4;4657:1;4650:15;4677:191;4717:3;4736:20;4754:1;4736:20;:::i;:::-;4731:25;;4770:20;4788:1;4770:20;:::i;:::-;4765:25;;4813:1;4810;4806:9;4799:16;;4834:3;4831:1;4828:10;4825:36;;;4841:18;;:::i;:::-;4825:36;4677:191;;;;:::o;4874:118::-;4961:24;4979:5;4961:24;:::i;:::-;4956:3;4949:37;4874:118;;:::o;4998:442::-;5147:4;5185:2;5174:9;5170:18;5162:26;;5198:71;5266:1;5255:9;5251:17;5242:6;5198:71;:::i;:::-;5279:72;5347:2;5336:9;5332:18;5323:6;5279:72;:::i;:::-;5361;5429:2;5418:9;5414:18;5405:6;5361:72;:::i;:::-;4998:442;;;;;;:::o;5446:170::-;5586:22;5582:1;5574:6;5570:14;5563:46;5446:170;:::o;5622:366::-;5764:3;5785:67;5849:2;5844:3;5785:67;:::i;:::-;5778:74;;5861:93;5950:3;5861:93;:::i;:::-;5979:2;5974:3;5970:12;5963:19;;5622:366;;;:::o;5994:419::-;6160:4;6198:2;6187:9;6183:18;6175:26;;6247:9;6241:4;6237:20;6233:1;6222:9;6218:17;6211:47;6275:131;6401:4;6275:131;:::i;:::-;6267:139;;5994:419;;;:::o;6419:194::-;6459:4;6479:20;6497:1;6479:20;:::i;:::-;6474:25;;6513:20;6531:1;6513:20;:::i;:::-;6508:25;;6557:1;6554;6550:9;6542:17;;6581:1;6575:4;6572:11;6569:37;;;6586:18;;:::i;:::-;6569:37;6419:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "465400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_mint(address,uint256)": "infinite",
								"approval(address,uint256)": "infinite",
								"balanceOf(address)": "2828",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 412,
									"end": 474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 412,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 462,
									"end": 467,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 459,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 455,
									"end": 467,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 455,
									"end": 467,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 467,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 455,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 455,
									"end": 467,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 455,
									"end": 467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 455,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 412,
									"end": 474,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2650,
									"end": 2656,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2699,
									"end": 2701,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2687,
									"end": 2696,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2685,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2670,
									"end": 2702,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2705,
									"end": 2784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2846,
									"end": 2847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2844,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2831,
									"end": 2848,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2825,
									"end": 2849,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2876,
									"end": 2894,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2868,
									"end": 2874,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2865,
									"end": 2895,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2898,
									"end": 2977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3069,
									"end": 3076,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3060,
									"end": 3066,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3049,
									"end": 3058,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3045,
									"end": 3067,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 3003,
									"end": 3077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2993,
									"end": 3077,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2993,
									"end": 3077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 3087,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3100,
									"end": 3199,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3100,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3152,
									"end": 3158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3186,
									"end": 3191,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3170,
									"end": 3192,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3170,
									"end": 3192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3100,
									"end": 3199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3100,
									"end": 3199,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3100,
									"end": 3199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3100,
									"end": 3199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3385,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3205,
									"end": 3385,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3253,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3250,
									"end": 3251,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3243,
									"end": 3331,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3354,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3347,
									"end": 3348,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3355,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3378,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3371,
									"end": 3372,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3379,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3711,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3391,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3435,
									"end": 3441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3472,
									"end": 3473,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3466,
									"end": 3470,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3462,
									"end": 3474,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3452,
									"end": 3474,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3452,
									"end": 3474,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3513,
									"end": 3517,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3558,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3530,
									"end": 3611,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3530,
									"end": 3611,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3596,
									"end": 3600,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3584,
									"end": 3601,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3574,
									"end": 3601,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3574,
									"end": 3601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3530,
									"end": 3611,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3530,
									"end": 3611,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3658,
									"end": 3660,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3650,
									"end": 3656,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3647,
									"end": 3661,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3627,
									"end": 3645,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3624,
									"end": 3662,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3621,
									"end": 3705,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3677,
									"end": 3695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3621,
									"end": 3705,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3621,
									"end": 3705,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3858,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3717,
									"end": 3858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3766,
									"end": 3770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3789,
									"end": 3792,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3812,
									"end": 3815,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3802,
									"end": 3816,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3850,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3843,
									"end": 3844,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3833,
									"end": 3851,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3851,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3851,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3858,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3858,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3957,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3864,
									"end": 3957,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3948,
									"end": 3950,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3943,
									"end": 3945,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3936,
									"end": 3941,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3932,
									"end": 3946,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3928,
									"end": 3951,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3918,
									"end": 3951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3918,
									"end": 3951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3957,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3957,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3957,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3957,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 4070,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3963,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4007,
									"end": 4015,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4057,
									"end": 4062,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4055,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4063,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4026,
									"end": 4063,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4026,
									"end": 4063,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 4070,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 4070,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 4070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 4070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3963,
									"end": 4070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4145,
									"end": 4151,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4196,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4183,
									"end": 4193,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4197,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4218,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4248,
									"end": 4314,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4237,
									"end": 4246,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4218,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4218,
									"end": 4315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4218,
									"end": 4315,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4218,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4366,
									"end": 4374,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4364,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4336,
									"end": 4375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4375,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4336,
									"end": 4375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4324,
									"end": 4375,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4324,
									"end": 4375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4408,
									"end": 4412,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4404,
									"end": 4413,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4402,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4414,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4384,
									"end": 4414,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4384,
									"end": 4414,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4457,
									"end": 4461,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4447,
									"end": 4455,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4443,
									"end": 4462,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4436,
									"end": 4441,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4433,
									"end": 4463,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4423,
									"end": 4463,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4423,
									"end": 4463,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4152,
									"end": 4469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4152,
									"end": 4469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4552,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4475,
									"end": 4552,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4519,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4541,
									"end": 4546,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4530,
									"end": 4546,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4530,
									"end": 4546,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4552,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4552,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4618,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4558,
									"end": 4618,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4586,
									"end": 4589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4607,
									"end": 4612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4600,
									"end": 4612,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4600,
									"end": 4612,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4618,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4618,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4618,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4766,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4624,
									"end": 4766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4674,
									"end": 4683,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4707,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4725,
									"end": 4759,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4734,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4752,
									"end": 4757,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4734,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4734,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4734,
									"end": 4758,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4734,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4725,
									"end": 4759,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4725,
									"end": 4759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4725,
									"end": 4759,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4725,
									"end": 4759,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4707,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4707,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4707,
									"end": 4760,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4707,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4760,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4766,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4847,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4772,
									"end": 4847,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4818,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4836,
									"end": 4841,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4829,
									"end": 4841,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4829,
									"end": 4841,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4847,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4847,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4847,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 5122,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4853,
									"end": 5122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4963,
									"end": 5002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4994,
									"end": 5001,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4963,
									"end": 5002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4963,
									"end": 5002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4963,
									"end": 5002,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4963,
									"end": 5002,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 5073,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5097,
									"end": 5113,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5073,
									"end": 5114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5114,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5073,
									"end": 5114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5052,
									"end": 5063,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 5024,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5115,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 5024,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5018,
									"end": 5022,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5011,
									"end": 5116,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 5122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 5122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 5122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 5122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 5122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5128,
									"end": 5201,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5128,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5173,
									"end": 5176,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5194,
									"end": 5195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5187,
									"end": 5195,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5187,
									"end": 5195,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5128,
									"end": 5201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5128,
									"end": 5201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5207,
									"end": 5396,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5207,
									"end": 5396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5284,
									"end": 5316,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5284,
									"end": 5316,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5284,
									"end": 5316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5284,
									"end": 5316,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5284,
									"end": 5316,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5325,
									"end": 5390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5383,
									"end": 5389,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5381,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5369,
									"end": 5373,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5325,
									"end": 5390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5325,
									"end": 5390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5325,
									"end": 5390,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5325,
									"end": 5390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5260,
									"end": 5396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5207,
									"end": 5396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5207,
									"end": 5396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5207,
									"end": 5396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5588,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5402,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5479,
									"end": 5482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5472,
									"end": 5477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5469,
									"end": 5483,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5533,
									"end": 5572,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5570,
									"end": 5571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5563,
									"end": 5568,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5533,
									"end": 5572,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5533,
									"end": 5572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5533,
									"end": 5572,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5572,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5495,
									"end": 5508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5486,
									"end": 5508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5486,
									"end": 5508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5462,
									"end": 5582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5594,
									"end": 6137,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5594,
									"end": 6137,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5695,
									"end": 5697,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5690,
									"end": 5693,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5687,
									"end": 5698,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5684,
									"end": 6130,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5684,
									"end": 6130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5684,
									"end": 6130,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5767,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5761,
									"end": 5766,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5767,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 5729,
									"end": 5767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5767,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5729,
									"end": 5767,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5813,
									"end": 5842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5831,
									"end": 5841,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5813,
									"end": 5842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 5813,
									"end": 5842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5813,
									"end": 5842,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5813,
									"end": 5842,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5803,
									"end": 5811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5799,
									"end": 5843,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 5998,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5984,
									"end": 5994,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5981,
									"end": 5999,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6027,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5978,
									"end": 6027,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6017,
									"end": 6025,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6025,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6027,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5978,
									"end": 6027,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6040,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6096,
									"end": 6118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6114,
									"end": 6117,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6096,
									"end": 6118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 6096,
									"end": 6118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6096,
									"end": 6118,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6096,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6086,
									"end": 6094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6119,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6069,
									"end": 6080,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6040,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 6040,
									"end": 6120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6040,
									"end": 6120,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6040,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5699,
									"end": 6130,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5699,
									"end": 6130,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5684,
									"end": 6130,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5684,
									"end": 6130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5594,
									"end": 6137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5594,
									"end": 6137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5594,
									"end": 6137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5594,
									"end": 6137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6143,
									"end": 6260,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6143,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6197,
									"end": 6205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6247,
									"end": 6252,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6241,
									"end": 6245,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6216,
									"end": 6253,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6216,
									"end": 6253,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6143,
									"end": 6260,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6143,
									"end": 6260,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6143,
									"end": 6260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6143,
									"end": 6260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6143,
									"end": 6260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6435,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6266,
									"end": 6435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6310,
									"end": 6316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6343,
									"end": 6394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6391,
									"end": 6392,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6387,
									"end": 6393,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6379,
									"end": 6384,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6372,
									"end": 6385,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6343,
									"end": 6394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6343,
									"end": 6394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6343,
									"end": 6394,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6343,
									"end": 6394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6395,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6424,
									"end": 6428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6418,
									"end": 6422,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6429,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6404,
									"end": 6429,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6404,
									"end": 6429,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6317,
									"end": 6435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6435,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6435,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6735,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6440,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6520,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6662,
									"end": 6691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6687,
									"end": 6690,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6681,
									"end": 6685,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6662,
									"end": 6691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6662,
									"end": 6691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6662,
									"end": 6691,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6662,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6654,
									"end": 6691,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6654,
									"end": 6691,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6724,
									"end": 6727,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6721,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6717,
									"end": 6728,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6711,
									"end": 6715,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6708,
									"end": 6729,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6700,
									"end": 6729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6700,
									"end": 6729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6735,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6735,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6740,
									"end": 8135,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 6740,
									"end": 8135,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6857,
									"end": 6894,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6890,
									"end": 6893,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6857,
									"end": 6894,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 6857,
									"end": 6894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6857,
									"end": 6894,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6857,
									"end": 6894,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 6977,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6951,
									"end": 6957,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6948,
									"end": 6978,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6945,
									"end": 7001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6945,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6945,
									"end": 7001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 6981,
									"end": 6999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6945,
									"end": 7001,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6945,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 7057,
									"end": 7061,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7051,
									"end": 7062,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 7025,
									"end": 7063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7110,
									"end": 7177,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 7170,
									"end": 7176,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7162,
									"end": 7168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7156,
									"end": 7160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7110,
									"end": 7177,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7110,
									"end": 7177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7110,
									"end": 7177,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 7110,
									"end": 7177,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7204,
									"end": 7205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7228,
									"end": 7232,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7215,
									"end": 7232,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7215,
									"end": 7232,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7260,
									"end": 7262,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7252,
									"end": 7258,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7263,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7278,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7272,
									"end": 7890,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7272,
									"end": 7890,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7272,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 7272,
									"end": 7890,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7934,
									"end": 7935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7951,
									"end": 7957,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7948,
									"end": 8025,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7948,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7948,
									"end": 8025,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8000,
									"end": 8009,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7995,
									"end": 7998,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 7991,
									"end": 8010,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 8011,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7976,
									"end": 8011,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7976,
									"end": 8011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7948,
									"end": 8025,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7948,
									"end": 8025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8051,
									"end": 8118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 8111,
									"end": 8117,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8104,
									"end": 8109,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8051,
									"end": 8118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8051,
									"end": 8118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8051,
									"end": 8118,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 8051,
									"end": 8118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8045,
									"end": 8049,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8038,
									"end": 8119,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7907,
									"end": 8129,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7242,
									"end": 8129,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7242,
									"end": 8129,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7272,
									"end": 7890,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 7272,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7324,
									"end": 7328,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7320,
									"end": 7329,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7312,
									"end": 7318,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7308,
									"end": 7330,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7358,
									"end": 7395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7390,
									"end": 7394,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7358,
									"end": 7395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 7358,
									"end": 7395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7358,
									"end": 7395,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7358,
									"end": 7395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7418,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7445,
									"end": 7452,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7442,
									"end": 7443,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7453,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7524,
									"end": 7533,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7519,
									"end": 7522,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7515,
									"end": 7534,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7509,
									"end": 7535,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7501,
									"end": 7507,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7494,
									"end": 7536,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7575,
									"end": 7576,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7567,
									"end": 7573,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7563,
									"end": 7577,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7553,
									"end": 7577,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7553,
									"end": 7577,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7622,
									"end": 7624,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7611,
									"end": 7620,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7607,
									"end": 7625,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7594,
									"end": 7625,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7594,
									"end": 7625,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7468,
									"end": 7472,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7465,
									"end": 7466,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7473,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7456,
									"end": 7473,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7456,
									"end": 7473,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7431,
									"end": 7639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7667,
									"end": 7673,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7658,
									"end": 7665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7655,
									"end": 7674,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7652,
									"end": 7831,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7652,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7652,
									"end": 7831,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7725,
									"end": 7734,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7710,
									"end": 7736,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7768,
									"end": 7816,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 7810,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7802,
									"end": 7808,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7798,
									"end": 7815,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7787,
									"end": 7796,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7768,
									"end": 7816,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7768,
									"end": 7816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7768,
									"end": 7816,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 7768,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7766,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7753,
									"end": 7817,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7675,
									"end": 7831,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7652,
									"end": 7831,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7652,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7877,
									"end": 7878,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7873,
									"end": 7874,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7865,
									"end": 7871,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 7861,
									"end": 7875,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7857,
									"end": 7879,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7851,
									"end": 7855,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7880,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7279,
									"end": 7890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7279,
									"end": 7890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7279,
									"end": 7890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7242,
									"end": 8129,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7242,
									"end": 8129,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7242,
									"end": 8129,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 8135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 8135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 8135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6740,
									"end": 8135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6740,
									"end": 8135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6740,
									"end": 8135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1492,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205482113e5a37bd6e1e8fff8f59b46747d348f188f7bf011cd4b6e4a6a795c42364736f6c634300081e0033",
									".code": [
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "4E6EC247"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "75247A58"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1283,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1283,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 480,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 480,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 480,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 583,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 908,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 908,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1342,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1342,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1418,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1400,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1400,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1460,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 480,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 564,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 569,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 556,
											"end": 570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 556,
											"end": 570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 570,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 556,
											"end": 570,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 549,
											"end": 570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 549,
											"end": 570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 583,
											"end": 902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 679,
											"end": 680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 661,
											"end": 668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 661,
											"end": 681,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 653,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 653,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 733,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 715,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 715,
											"end": 765,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 715,
											"end": 765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 775,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 775,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 822,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 811,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 837,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 838,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 811,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 811,
											"end": 847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 811,
											"end": 847,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 811,
											"end": 847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 871,
											"end": 876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 887,
											"end": 893,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 894,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 862,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 862,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 894,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 583,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 994,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 994,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 978,
											"end": 980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 978,
											"end": 994,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 994,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 978,
											"end": 994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 970,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 970,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1028,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1115,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1126,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1126,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1088,
											"end": 1151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1088,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1180,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1161,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1201,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1238,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1791,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2099,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2708,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2539,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573732063616E6E6F74206265203000000000000000000000000000"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 3080,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2714,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2941,
											"end": 2943,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2936,
											"end": 2939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2877,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2944,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2877,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3042,
											"end": 3045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2953,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 3046,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2953,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 3080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 3080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 3080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 3080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3505,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3086,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3493,
											"end": 3497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3367,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3498,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3367,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3688,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3511,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3680,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206372656469742063616E6E6F7420626520300000000000"
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3694,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 3916,
											"end": 3919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3857,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3857,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3857,
											"end": 3924,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3857,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4022,
											"end": 4025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3933,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 4026,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3933,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 4060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 4060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4485,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4066,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4329,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4473,
											"end": 4477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4347,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4478,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4347,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4671,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4491,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4539,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4626,
											"end": 4641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4665,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4868,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4677,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4736,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4788,
											"end": 4789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4770,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4838,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4825,
											"end": 4861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4841,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4861,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4825,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4992,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4874,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4979,
											"end": 4984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4961,
											"end": 4985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4985,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4961,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4949,
											"end": 4986,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5266,
											"end": 5267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5264,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5198,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5347,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5279,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5418,
											"end": 5427,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5411,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5361,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5433,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5361,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5616,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5446,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5608,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5609,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5988,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5622,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5844,
											"end": 5847,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5785,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5785,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5785,
											"end": 5852,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5785,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5852,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5950,
											"end": 5953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5861,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 5981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 5982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6413,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5994,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6200,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6187,
											"end": 6196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6257,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6401,
											"end": 6405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6275,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6406,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6275,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6419,
											"end": 6613,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6419,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6479,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6531,
											"end": 6532,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6513,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6533,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6513,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6583,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6606,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6569,
											"end": 6606,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6586,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6586,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6586,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6606,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6569,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6419,
											"end": 6613,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6419,
											"end": 6613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6419,
											"end": 6613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6419,
											"end": 6613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6419,
											"end": 6613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"task2/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_mint(address,uint256)": "4e6ec247",
							"approval(address,uint256)": "75247a58",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task2/ERC20.sol\":\"MyFirstERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"task2/ERC20.sol\":{\"keccak256\":\"0x5f64759b5dc207fc878852ea6ebd137de87269b1dccd19b75a15eb16407663fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec447e88625e9ccc62d9d50819cdb5237c4b1bf813d6a3e1a1722ceea33d418\",\"dweb:/ipfs/QmPy3TtftDDyH561iNV5dhik5BuWTrS8uHa2wVzUpKxoHw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 792,
								"contract": "task2/ERC20.sol:MyFirstERC20",
								"label": "_balance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 798,
								"contract": "task2/ERC20.sol:MyFirstERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 800,
								"contract": "task2/ERC20.sol:MyFirstERC20",
								"label": "name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2864:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2881:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2874:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2855:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:1"
									},
									"scope": 651,
									"src": "2803:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3007:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3024:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3017:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2998:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:1"
									},
									"scope": 651,
									"src": "2933:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3319:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3329:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3377:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3384:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3404:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3313:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:1"
									},
									"scope": 651,
									"src": "3244:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3544:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3554:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3489:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:1"
									},
									"scope": 651,
									"src": "3455:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3981:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3991:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4007:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4054:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4070:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3975:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:1"
									},
									"scope": 651,
									"src": "3902:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4773:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4783:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4823:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4880:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4886:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4890:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4906:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4702:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4716:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4728:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:1"
									},
									"scope": 651,
									"src": "4680:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5366:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5380:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5376:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5400:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5421:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5414:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5475:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5471:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5493:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5514:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5507:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5316:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:1"
									},
									"scope": 651,
									"src": "5297:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5987:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6001:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6175:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6189:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6211:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6244:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6258:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6240:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6265:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6315:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6321:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6334:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6290:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6475:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6485:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6493:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6507:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5997:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6021:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6137:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6551:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6766:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6925:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6935:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6942:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6547:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6569:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6714:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6730:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7002:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6987:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "6982:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5943:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:1"
									},
									"scope": 651,
									"src": "5912:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7418:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7428:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7455:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7476:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7469:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7557:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7394:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 651,
									"src": "7362:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7944:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7958:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "7954:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "7981:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8002:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "7995:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8081:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7920:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:1"
									},
									"scope": 651,
									"src": "7888:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8704:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8739:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:1"
									},
									"scope": 651,
									"src": "8630:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9703:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9717:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9713:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9738:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9759:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9752:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9811:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9838:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9859:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9852:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9910:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9922:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "9940:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "9959:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9955:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9970:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "9998:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10005:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10014:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "9989:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "9984:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9623:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9638:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:1"
									},
									"scope": 651,
									"src": "9605:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10408:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10418:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10455:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10484:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10480:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10522:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10540:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10536:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10566:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10618:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10627:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10645:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10591:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10716:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10723:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10732:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10707:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10359:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 651,
									"src": "10319:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9691:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "215:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "397:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "406:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "428:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:2"
									},
									"src": "391:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "628:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "637:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "660:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:2"
									},
									"src": "622:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "822:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:2"
									},
									"scope": 729,
									"src": "776:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 729,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1235:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 729,
									"src": "1205:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 729,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:2"
									},
									"scope": 729,
									"src": "2310:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2727:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2739:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2772:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:2"
									},
									"scope": 729,
									"src": "2691:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "205:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2675:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"task2/ERC20.sol": {
				"ast": {
					"absolutePath": "task2/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyFirstERC20": [
							969
						]
					},
					"id": 970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "32:21:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 970,
							"sourceUnit": 652,
							"src": "55:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyFirstERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969
							],
							"name": "MyFirstERC20",
							"nameLocation": "121:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "172:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 969,
									"src": "141:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 791,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 789,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "149:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "141:22:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 790,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "158:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "258:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 969,
									"src": "186:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 797,
										"keyName": "account",
										"keyNameLocation": "202:7:5",
										"keyType": {
											"id": 793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "194:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "186:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 796,
											"keyName": "spender",
											"keyNameLocation": "229:7:5",
											"keyType": {
												"id": 794,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "221:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "213:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 795,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "240:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "282:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 969,
									"src": "275:11:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 799,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "275:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 808,
									"name": "Transfer",
									"nameLocation": "299:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "316:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "308:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "330:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "322:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "339:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "334:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:39:5"
									},
									"src": "293:54:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 816,
									"name": "Approval",
									"nameLocation": "358:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "375:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "367:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "389:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "381:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "398:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "393:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "393:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:39:5"
									},
									"src": "352:54:5"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "445:29:5",
										"statements": [
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 821,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "455:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "462:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "455:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "455:12:5"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "438:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "424:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "424:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:21:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:0:5"
									},
									"scope": 969,
									"src": "412:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "539:38:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 833,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "556:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 835,
													"indexExpression": {
														"id": 834,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "565:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "556:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 832,
												"id": 836,
												"nodeType": "Return",
												"src": "549:21:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "489:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "507:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "499:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "533:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "533:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:6:5"
									},
									"scope": 969,
									"src": "480:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "643:259:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "661:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "679:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "671:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "671:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "671:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "661:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732063616e6e6f742062652030",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "683:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																"typeString": "literal_string \"Address cannot be 0\""
															},
															"value": "Address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																"typeString": "literal_string \"Address cannot be 0\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "653:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "653:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 856,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "723:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "732:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "723:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206372656469742063616e6e6f742062652030",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "735:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																"typeString": "literal_string \"Transfer credit cannot be 0\""
															},
															"value": "Transfer credit cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																"typeString": "literal_string \"Transfer credit cannot be 0\""
															}
														],
														"id": 855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "715:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "715:50:5"
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "783:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "775:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 862,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "775:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"expression": {
														"id": 864,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "791:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "795:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "791:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "775:26:5"
											},
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 867,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "811:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 870,
															"indexExpression": {
																"id": 868,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "823:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "811:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 871,
														"indexExpression": {
															"id": 869,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "830:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "811:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "841:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "811:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "811:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 876,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "871:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "887:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "862:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "EmitStatement",
												"src": "857:37:5"
											}
										]
									},
									"functionSelector": "75247a58",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approval",
									"nameLocation": "592:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "609:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "601:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "626:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "618:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:33:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:5"
									},
									"scope": 969,
									"src": "583:319:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "960:317:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "978:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "992:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "984:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 891,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "984:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "984:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "978:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732063616e6e6f742062652030",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "996:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																"typeString": "literal_string \"Address cannot be 0\""
															},
															"value": "Address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																"typeString": "literal_string \"Address cannot be 0\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "970:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "970:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "1036:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1045:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1036:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206372656469742063616e6e6f742062652030",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1048:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																"typeString": "literal_string \"Transfer credit cannot be 0\""
															},
															"value": "Transfer credit cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																"typeString": "literal_string \"Transfer credit cannot be 0\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1028:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1028:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "1028:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 907,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1096:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 910,
																"indexExpression": {
																	"expression": {
																		"id": 908,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1105:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1109:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1105:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1096:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 911,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "1120:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1096:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1128:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1088:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1088:63:5"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 916,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1161:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 919,
														"indexExpression": {
															"expression": {
																"id": 917,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1170:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1174:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1170:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1161:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 920,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "1185:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1161:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1161:30:5"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 923,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1201:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 925,
														"indexExpression": {
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "1210:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1201:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 926,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "1217:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1201:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1201:22:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 930,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1247:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1251:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1247:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "1259:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1263:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1238:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "1233:37:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "917:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "934:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "926:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "943:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "938:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "938:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:25:5"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:5"
									},
									"scope": 969,
									"src": "908:369:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "1332:157:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 945,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "1350:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1364:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1356:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 946,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1356:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1356:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1350:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732063616e6e6f742062652030",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																"typeString": "literal_string \"Address cannot be 0\""
															},
															"value": "Address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06146a4dbb18d0d99d7f0b2202055cf756ad543c27bb6bc4f8c217b808bd4c0",
																"typeString": "literal_string \"Address cannot be 0\""
															}
														],
														"id": 944,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1342:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "1342:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 955,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "1408:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1417:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1408:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206372656469742063616e6e6f742062652030",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1420:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																"typeString": "literal_string \"Transfer credit cannot be 0\""
															},
															"value": "Transfer credit cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1662e19664a8974ad48c9f8d2636924deefe9c3eed73411ae2e813c51c7f3f",
																"typeString": "literal_string \"Transfer credit cannot be 0\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1400:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1400:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "1400:50:5"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 961,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1460:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 963,
														"indexExpression": {
															"id": 962,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1469:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1460:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 964,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "1476:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1460:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "1460:22:5"
											}
										]
									},
									"functionSelector": "4e6ec247",
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1292:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1306:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1298:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1315:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1310:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1310:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:25:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:0:5"
									},
									"scope": 969,
									"src": "1283:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 970,
							"src": "112:1380:5",
							"usedErrors": [],
							"usedEvents": [
								808,
								816
							]
						}
					],
					"src": "32:1460:5"
				},
				"id": 5
			}
		}
	}
}